{"category_type":"topic","category_name":"recurrent-neural-networks","repos_data":[{"full_name":"BrainJS/brain.js","description":"ðŸ¤– GPU accelerated Neural networks in JavaScript for Browsers and Node.js","topics":["neural-network","brain","recurrent-neural-networks","easy-to-use","api","web","nodejs","browser","convolutional-neural-networks","node"],"created_at":"2016-02-13T18:09:44Z","pushed_at":"2023-12-07T17:12:01Z","stargazers_count":14088,"language":"TypeScript"},{"full_name":"guillaume-chevalier/LSTM-Human-Activity-Recognition","description":"Human Activity Recognition example using TensorFlow on smartphone sensors dataset and an LSTM RNN. Classifying the type of movement amongst six activity categories - Guillaume Chevalier","topics":["machine-learning","deep-learning","lstm","human-activity-recognition","neural-network","rnn","recurrent-neural-networks","tensorflow","activity-recognition"],"created_at":"2016-05-18T02:00:21Z","pushed_at":"2022-11-06T17:53:06Z","stargazers_count":3257,"language":"Python"},{"full_name":"mravanelli/pytorch-kaldi","description":"pytorch-kaldi is a project for developing state-of-the-art DNN/RNN hybrid speech recognition systems. The DNN part is managed by pytorch, while feature extraction, label computation, and decoding are performed with the kaldi toolkit.","topics":["speech-recognition","gru","dnn","kaldi","rnn-model","pytorch","timit","deep-learning","deep-neural-networks","recurrent-neural-networks"],"created_at":"2018-02-27T22:16:33Z","pushed_at":"2022-03-14T05:10:47Z","stargazers_count":2335,"language":"Shell"},{"full_name":"minqi/learning-to-communicate-pytorch","description":"Learning to Communicate with Deep Multi-Agent Reinforcement Learning in PyTorch","topics":["rl","reinforcement-learning","deep-reinforcement-learning","multi-agent-reinforcement-learning","multi-agent-systems","drl","deep-learning","deepmind","emergent-behavior","recurrent-neural-networks"],"created_at":"2018-09-05T09:32:31Z","pushed_at":"2019-04-01T08:17:36Z","stargazers_count":325,"language":"Python"},{"full_name":"L0SG/relational-rnn-pytorch","description":"An implementation of DeepMind's Relational Recurrent Neural Networks (NeurIPS 2018) in PyTorch.","topics":["pytorch","language-model","word-language-model","language-modeling","deep-learning","recurrent-neural-networks","deepmind","transformer","self-attention"],"created_at":"2018-08-21T07:57:41Z","pushed_at":"2018-12-27T05:38:23Z","stargazers_count":243,"language":"Python"},{"full_name":"Js-Mim/mss_pytorch","description":"Singing Voice Separation via Recurrent Inference and Skip-Filtering Connections - PyTorch Implementation.  Demo:","topics":["music-source-separation","deep-learning","recurrent-neural-networks","skip-filtering-connections","pytorch","mss-pytorch"],"created_at":"2017-08-29T08:16:39Z","pushed_at":"2018-11-02T10:20:17Z","stargazers_count":170,"language":"Python"},{"full_name":"jinyeom/neat","description":"NEAT (NeuroEvolution of Augmenting Topologies) implemented in Go","topics":["neat","go","neuroevolution","neural-network","topologies","reinforcement-learning","recurrent-neural-networks","genetic-algorithm"],"created_at":"2016-11-17T04:23:14Z","pushed_at":"2018-07-04T20:45:55Z","stargazers_count":69,"language":"Go"}],"frecuent_topics":{"recurrent-neural-networks":7,"deep-learning":5,"neural-network":3,"pytorch":3,"reinforcement-learning":2}}