{"category_type":"topic","category_name":"pytorch","repos_data":[{"full_name":"huggingface/transformers","description":"ü§ó Transformers: State-of-the-art Machine Learning for Pytorch, TensorFlow, and JAX.","topics":["nlp","natural-language-processing","pytorch","language-model","tensorflow","bert","language-models","pytorch-transformers","nlp-library","transformer"],"created_at":"2018-10-29T13:56:00Z","pushed_at":"2024-01-21T09:20:13Z","stargazers_count":118997,"language":"Python"},{"full_name":"keras-team/keras","description":"Deep Learning for humans","topics":["deep-learning","tensorflow","neural-networks","machine-learning","data-science","python","jax","pytorch"],"created_at":"2015-03-28T00:35:42Z","pushed_at":"2024-01-20T20:12:15Z","stargazers_count":60193,"language":"Python"},{"full_name":"ultralytics/yolov5","description":"YOLOv5 üöÄ in PyTorch > ONNX > CoreML > TFLite","topics":["yolov3","yolov5","object-detection","pytorch","onnx","coreml","ios","tflite","yolo","deep-learning"],"created_at":"2020-05-18T03:45:11Z","pushed_at":"2024-01-08T12:12:34Z","stargazers_count":44414,"language":"Dockerfile"},{"full_name":"labmlai/annotated_deep_learning_paper_implementations","description":"üßë‚Äçüè´ 60 Implementations/tutorials of deep learning papers with side-by-side notes üìù; including transformers (original, xl, switch, feedback, vit, ...), optimizers (adam, adabelief, sophia, ...), gans(cyclegan, stylegan2, ...), üéÆ reinforcement learning (ppo, dqn), capsnet, distillation, ... üß†","topics":["deep-learning","deep-learning-tutorial","pytorch","gan","transformers","reinforcement-learning","optimizers","neural-networks","transformer","machine-learning"],"created_at":"2020-08-25T02:29:34Z","pushed_at":"2024-01-12T07:52:00Z","stargazers_count":42454,"language":"Python"},{"full_name":"microsoft/DeepSpeed","description":"DeepSpeed is a deep learning optimization library that makes distributed training and inference easy, efficient, and effective.","topics":["deep-learning","pytorch","gpu","machine-learning","billion-parameters","data-parallelism","model-parallelism","inference","pipeline-parallelism","compression"],"created_at":"2020-01-23T18:35:18Z","pushed_at":"2024-01-13T07:20:25Z","stargazers_count":30732,"language":"Python"},{"full_name":"yunjey/pytorch-tutorial","description":"PyTorch Tutorial for Deep Learning Researchers","topics":["deep-learning","pytorch-tutorial","neural-networks","pytorch"],"created_at":"2017-03-10T07:41:47Z","pushed_at":"2023-08-15T10:17:50Z","stargazers_count":28501,"language":"Python"},{"full_name":"huggingface/pytorch-image-models","description":"PyTorch image models, scripts, pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (ViT), MobileNet-V3/V2, RegNet, DPN, CSPNet, Swin Transformer, MaxViT, CoAtNet, ConvNeXt, and more","topics":["pytorch","imagenet-classifier","resnet","dual-path-networks","cnn-classification","pretrained-models","pretrained-weights","distributed-training","mobile-deep-learning","mobilenet-v2"],"created_at":"2019-02-02T05:51:12Z","pushed_at":"2024-01-20T23:11:11Z","stargazers_count":28466,"language":"Python"},{"full_name":"open-mmlab/mmdetection","description":"OpenMMLab Detection Toolbox and Benchmark","topics":["object-detection","instance-segmentation","fast-rcnn","faster-rcnn","mask-rcnn","cascade-rcnn","ssd","retinanet","pytorch","panoptic-segmentation"],"created_at":"2018-08-22T07:06:06Z","pushed_at":"2024-01-10T04:44:25Z","stargazers_count":26740,"language":"Shell"},{"full_name":"Lightning-AI/pytorch-lightning","description":"Pretrain, finetune and deploy AI models on multiple GPUs, TPUs with zero code changes.","topics":["python","deep-learning","artificial-intelligence","ai","pytorch","data-science","machine-learning"],"created_at":"2019-03-31T00:45:57Z","pushed_at":"2024-01-20T14:48:34Z","stargazers_count":25709,"language":"Python"},{"full_name":"fastai/fastai","description":"The fastai deep learning library","topics":["deep-learning","machine-learning","pytorch","python","gpu","fastai","notebooks","colab"],"created_at":"2017-09-09T17:43:36Z","pushed_at":"2024-01-07T05:14:04Z","stargazers_count":25075,"language":"Python"},{"full_name":"microsoft/JARVIS","description":"JARVIS, a system to connect LLMs with ML community. Paper: https://arxiv.org/pdf/2303.17580.pdf","topics":["deep-learning","platform","pytorch"],"created_at":"2023-03-30T02:57:12Z","pushed_at":"2024-01-12T10:23:45Z","stargazers_count":22425,"language":"Python"},{"full_name":"junyanz/pytorch-CycleGAN-and-pix2pix","description":"Image-to-Image Translation in PyTorch","topics":["pytorch","gan","cyclegan","pix2pix","deep-learning","computer-vision","computer-graphics","image-manipulation","image-generation","generative-adversarial-network"],"created_at":"2017-04-18T10:33:05Z","pushed_at":"2023-12-04T15:06:06Z","stargazers_count":21333,"language":"Python"},{"full_name":"JaidedAI/EasyOCR","description":"Ready-to-use OCR with 80+ supported languages and all popular writing scripts including Latin, Chinese, Arabic, Devanagari, Cyrillic and etc.","topics":["ocr","deep-learning","crnn","pytorch","lstm","machine-learning","scene-text","scene-text-recognition","optical-character-recognition","cnn"],"created_at":"2020-03-14T11:46:39Z","pushed_at":"2023-12-16T22:04:09Z","stargazers_count":20718,"language":"Python"},{"full_name":"pyg-team/pytorch_geometric","description":"Graph Neural Network Library for PyTorch","topics":["pytorch","geometric-deep-learning","graph-neural-networks","deep-learning","graph-convolutional-networks"],"created_at":"2017-10-06T16:03:03Z","pushed_at":"2024-01-21T14:11:48Z","stargazers_count":19408,"language":"Python"},{"full_name":"Sanster/lama-cleaner","description":"Image inpainting tool powered by SOTA AI Model. Remove any unwanted object, defect, people from your pictures or erase and replace(powered by stable diffusion) any thing on your pictures.","topics":["inpainting","pytorch","lama","latent-diffusion","mat","zits","stable-diffusion"],"created_at":"2021-11-15T14:16:40Z","pushed_at":"2024-01-10T14:09:09Z","stargazers_count":14761,"language":"Shell"},{"full_name":"flairNLP/flair","description":"A very simple framework for state-of-the-art Natural Language Processing (NLP)","topics":["pytorch","nlp","named-entity-recognition","sequence-labeling","semantic-role-labeling","word-embeddings","natural-language-processing","machine-learning"],"created_at":"2018-06-11T11:04:18Z","pushed_at":"2024-01-19T09:43:15Z","stargazers_count":13358,"language":"Python"},{"full_name":"vllm-project/vllm","description":"A high-throughput and memory-efficient inference and serving engine for LLMs","topics":["gpt","llm","pytorch","llmops","mlops","model-serving","transformer","llm-serving","inference","llama"],"created_at":"2023-02-09T11:23:20Z","pushed_at":"2024-01-13T09:57:40Z","stargazers_count":13145,"language":"Python"},{"full_name":"deepset-ai/haystack","description":":mag: LLM orchestration framework to build customizable, production-ready LLM applications. Connect components (models, vector DBs, file converters) to pipelines or agents that can interact with your data. With advanced retrieval methods, it's best suited for building RAG, question answering, semantic search or conversational agent chatbots.","topics":["nlp","question-answering","bert","language-model","pytorch","semantic-search","squad","information-retrieval","summarization","transformers"],"created_at":"2019-11-14T09:05:28Z","pushed_at":"2024-01-12T18:04:09Z","stargazers_count":12314,"language":"Python"},{"full_name":"allenai/allennlp","description":"An open-source NLP research library, built on PyTorch.","topics":["pytorch","nlp","natural-language-processing","deep-learning","data-science","python"],"created_at":"2017-05-15T15:52:41Z","pushed_at":"2022-11-22T23:28:35Z","stargazers_count":11631,"language":"Python"},{"full_name":"microsoft/onnxruntime","description":"ONNX Runtime: cross-platform, high performance ML inferencing and training accelerator","topics":["deep-learning","onnx","neural-networks","machine-learning","ai-framework","hardware-acceleration","pytorch","tensorflow","scikit-learn"],"created_at":"2018-11-10T02:22:53Z","pushed_at":"2024-01-13T16:26:22Z","stargazers_count":11510,"language":"Batchfile"},{"full_name":"BlinkDL/RWKV-LM","description":"RWKV is an RNN with transformer-level LLM performance. It can be directly trained like a GPT (parallelizable). So it's combining the best of RNN and transformer - great performance, fast inference, saves VRAM, fast training, \"infinite\" ctx_len, and free sentence embedding.","topics":["attention-mechanism","deep-learning","gpt","gpt-2","gpt-3","language-model","linear-attention","lstm","pytorch","rnn"],"created_at":"2021-08-08T06:05:27Z","pushed_at":"2023-12-28T06:53:30Z","stargazers_count":10645,"language":"Python"},{"full_name":"ritchieng/the-incredible-pytorch","description":"The Incredible PyTorch: a curated list of tutorials, papers, projects, communities and more relating to PyTorch. ","topics":["pytorch","python","deep-learning-tutorial","deep-neural-networks","deep-learning-library","deep-learning"],"created_at":"2017-02-11T08:33:11Z","pushed_at":"2024-01-02T04:30:43Z","stargazers_count":10533,"language":"unknown"},{"full_name":"OpenMined/PySyft","description":"Perform data science on data that remains in someone else's server","topics":["deep-learning","secure-computation","pytorch","privacy","cryptography","python","syft","federated-learning","hacktoberfest"],"created_at":"2017-07-18T20:41:16Z","pushed_at":"2024-01-12T18:46:51Z","stargazers_count":9078,"language":"Python"},{"full_name":"kornia/kornia","description":"Geometric Computer Vision Library for SpatialAI","topics":["computer-vision","image-processing","machine-learning","pytorch","deep-learning","neural-network","python","artificial-intelligence","robotics","spatial-ai"],"created_at":"2018-08-22T10:31:37Z","pushed_at":"2024-01-21T15:01:16Z","stargazers_count":9033,"language":"Python"},{"full_name":"BlinkDL/ChatRWKV","description":"ChatRWKV is like ChatGPT but powered by RWKV (100% RNN) language model, and open source.","topics":["chatbot","chatgpt","language-model","pytorch","rnn","rwkv"],"created_at":"2023-01-13T08:07:40Z","pushed_at":"2023-12-27T03:33:12Z","stargazers_count":9011,"language":"Python"},{"full_name":"Cadene/pretrained-models.pytorch","description":"Pretrained ConvNets for pytorch: NASNet, ResNeXt, ResNet, InceptionV4, InceptionResnetV2, Xception, DPN, etc.","topics":["imagenet","resnet","resnext","pretrained","pytorch","inception"],"created_at":"2017-04-09T15:54:23Z","pushed_at":"2022-04-22T09:08:45Z","stargazers_count":8901,"language":"Lua"},{"full_name":"jacobgil/pytorch-grad-cam","description":"Advanced AI Explainability for computer vision.  Support for CNNs, Vision Transformers, Classification, Object detection, Segmentation, Image similarity and more.","topics":["deep-learning","pytorch","grad-cam","visualizations","interpretability","interpretable-ai","interpretable-deep-learning","score-cam","class-activation-maps","vision-transformers"],"created_at":"2017-05-31T19:55:15Z","pushed_at":"2023-12-28T19:10:49Z","stargazers_count":8806,"language":"Python"},{"full_name":"mozilla/TTS","description":":robot: :speech_balloon: Deep learning for Text to Speech  (Discussion forum: https://discourse.mozilla.org/c/tts)","topics":["deep-learning","text-to-speech","python","pytorch","tacotron","tts","speaker-encoder","dataset-analysis","tacotron2","tensorflow2"],"created_at":"2018-01-23T14:22:06Z","pushed_at":"2023-11-09T15:37:59Z","stargazers_count":8418,"language":"Python"},{"full_name":"qubvel/segmentation_models.pytorch","description":"Segmentation models with pretrained backbones. PyTorch.","topics":["segmentation","image-processing","pspnet","linknet","unet","unet-pytorch","pytorch","fpn","models","imagenet"],"created_at":"2019-03-01T16:21:21Z","pushed_at":"2023-11-27T01:24:07Z","stargazers_count":8415,"language":"Python"},{"full_name":"pyro-ppl/pyro","description":"Deep universal probabilistic programming with Python and PyTorch","topics":["python","pytorch","machine-learning","bayesian","probabilistic-programming","bayesian-inference","variational-inference","probabilistic-modeling","deep-learning"],"created_at":"2017-06-16T05:03:47Z","pushed_at":"2024-01-19T15:24:43Z","stargazers_count":8254,"language":"Python"},{"full_name":"jadore801120/attention-is-all-you-need-pytorch","description":"A PyTorch implementation of the Transformer model in \"Attention is All You Need\".","topics":["attention","deep-learning","attention-is-all-you-need","pytorch","nlp","natural-language-processing"],"created_at":"2017-06-14T10:15:20Z","pushed_at":"2023-10-05T02:14:06Z","stargazers_count":8173,"language":"Python"},{"full_name":"microsoft/LoRA","description":"Code for loralib, an implementation of \"LoRA: Low-Rank Adaptation of Large Language Models\"","topics":["gpt-2","adaptation","language-model","gpt-3","low-rank","pytorch","deep-learning","roberta","deberta","lora"],"created_at":"2021-06-18T02:16:35Z","pushed_at":"2024-01-09T15:03:19Z","stargazers_count":7847,"language":"Python"},{"full_name":"MorvanZhou/PyTorch-Tutorial","description":"Build your neural network easy and fast, Ëé´ÁÉ¶Python‰∏≠ÊñáÊïôÂ≠¶","topics":["neural-network","python","pytorch-tutorial","batch-normalization","cnn","rnn","autoencoder","pytorch","regression","classification"],"created_at":"2017-05-05T15:12:04Z","pushed_at":"2023-03-23T05:01:42Z","stargazers_count":7845,"language":"Python"},{"full_name":"lanpa/tensorboardX","description":"tensorboard for pytorch (and chainer, mxnet, numpy, ...)","topics":["pytorch","tensorboard","machine-learning","visualization","numpy"],"created_at":"2017-06-13T13:54:19Z","pushed_at":"2023-11-12T14:28:03Z","stargazers_count":7752,"language":"Python"},{"full_name":"arogozhnikov/einops","description":"Flexible and powerful tensor operations for readable and reliable code (for pytorch, jax, TF and others)","topics":["deep-learning","pytorch","tensorflow","numpy","cupy","chainer","keras","tensor","jax","einops"],"created_at":"2018-09-22T00:45:08Z","pushed_at":"2024-01-11T07:31:03Z","stargazers_count":7547,"language":"Python"},{"full_name":"espnet/espnet","description":"End-to-End Speech Processing Toolkit","topics":["deep-learning","end-to-end","chainer","pytorch","kaldi","speech-recognition","speech-synthesis","speech-translation","machine-translation","voice-conversion"],"created_at":"2017-12-13T00:45:11Z","pushed_at":"2024-01-11T16:26:20Z","stargazers_count":7518,"language":"Shell"},{"full_name":"jwyang/faster-rcnn.pytorch","description":"A faster pytorch implementation of faster r-cnn","topics":["faster-rcnn","pytorch"],"created_at":"2017-08-03T19:46:54Z","pushed_at":"2022-05-20T09:01:28Z","stargazers_count":7463,"language":"Shell"},{"full_name":"activeloopai/deeplake","description":"Database for AI. Store Vectors, Images, Texts, Videos, etc. Use with LLMs/LangChain. Store, query, version, & visualize any AI data. Stream data in real-time to PyTorch/TensorFlow. https://activeloop.ai","topics":["datasets","deep-learning","machine-learning","data-science","pytorch","tensorflow","data-version-control","python","ai","ml"],"created_at":"2019-08-09T06:17:59Z","pushed_at":"2024-01-19T21:55:34Z","stargazers_count":7406,"language":"Dockerfile"},{"full_name":"wiseodd/generative-models","description":"Collection of generative models, e.g. GAN, VAE in Pytorch and Tensorflow.","topics":["vae","gan","pytorch","tensorflow","generative-model","machine-learning","rbm","restricted-boltzmann-machine"],"created_at":"2016-12-07T11:28:16Z","pushed_at":"2022-05-17T05:08:23Z","stargazers_count":7191,"language":"Python"},{"full_name":"open-mmlab/mmsegmentation","description":"OpenMMLab Semantic Segmentation Toolbox and Benchmark.","topics":["semantic-segmentation","pytorch","pspnet","deeplabv3","transformer","swin-transformer","realtime-segmentation","vessel-segmentation","retinal-vessel-segmentation","image-segmentation"],"created_at":"2020-06-14T04:32:33Z","pushed_at":"2024-01-10T12:28:00Z","stargazers_count":6941,"language":"Python"},{"full_name":"stanfordnlp/stanza","description":"Stanford NLP Python library for tokenization, sentence segmentation, NER, and parsing of many human languages","topics":["python","nlp","natural-language-processing","machine-learning","deep-learning","artificial-intelligence","pytorch","universal-dependencies","named-entity-recognition","corenlp"],"created_at":"2017-09-26T08:00:56Z","pushed_at":"2024-01-13T09:50:12Z","stargazers_count":6915,"language":"Python"},{"full_name":"1adrianb/face-alignment","description":":fire: 2D and 3D Face alignment library build using pytorch ","topics":["python","deep-learning","face-alignment","face-detector","pytorch","face-detection"],"created_at":"2017-09-15T20:32:44Z","pushed_at":"2023-10-24T07:07:43Z","stargazers_count":6668,"language":"Python"},{"full_name":"huggingface/text-generation-inference","description":"Large Language Model Text Generation Inference","topics":["bloom","nlp","pytorch","inference","gpt","deep-learning","transformer","falcon","starcoder"],"created_at":"2022-10-08T10:26:28Z","pushed_at":"2024-01-11T18:52:38Z","stargazers_count":6601,"language":"Rust"},{"full_name":"Atcold/NYU-DLSP20","description":"NYU Deep Learning Spring 2020","topics":["jupyter-notebook","pytorch","deep-learning","neural-nets"],"created_at":"2018-07-09T11:40:25Z","pushed_at":"2023-12-29T19:26:06Z","stargazers_count":6595,"language":"Jupyter Notebook"},{"full_name":"OpenNMT/OpenNMT-py","description":"Open Source Neural Machine Translation and (Large) Language Models in PyTorch","topics":["deep-learning","pytorch","machine-translation","neural-machine-translation","language-model","llms"],"created_at":"2017-02-22T19:01:50Z","pushed_at":"2024-01-12T13:07:11Z","stargazers_count":6433,"language":"Python"},{"full_name":"NVIDIA/pix2pixHD","description":"Synthesizing and manipulating 2048x1024 images with conditional GANs","topics":["gan","deep-learning","deep-neural-networks","pytorch","pix2pix","image-to-image-translation","generative-adversarial-network","computer-vision","computer-graphics"],"created_at":"2017-12-01T19:19:14Z","pushed_at":"2023-05-25T17:56:44Z","stargazers_count":6428,"language":"Python"},{"full_name":"open-mmlab/mmagic","description":"OpenMMLab Multimodal Advanced, Generative, and Intelligent Creation Toolbox. Unlock the magic ü™Ñ: Generative-AI (AIGC), easy-to-use APIs, awsome model zoo, diffusion models, for text-to-image generation, image/video restoration/enhancement, etc.","topics":["super-resolution","inpainting","matting","image-generation","generative-adversarial-network","pytorch","deep-learning","video-interpolation","video-frame-interpolation","video-super-resolution"],"created_at":"2019-08-23T13:04:29Z","pushed_at":"2024-01-10T05:58:11Z","stargazers_count":6260,"language":"Python"},{"full_name":"codertimo/BERT-pytorch","description":"Google AI 2018 BERT pytorch implementation","topics":["bert","transformer","pytorch","nlp","language-model"],"created_at":"2018-10-15T12:58:15Z","pushed_at":"2023-09-15T12:57:08Z","stargazers_count":5831,"language":"Python"},{"full_name":"KevinMusgrave/pytorch-metric-learning","description":"The easiest way to use deep metric learning in your application. Modular, flexible, and extensible. Written in PyTorch.","topics":["metric-learning","deep-learning","computer-vision","machine-learning","pytorch","deep-metric-learning","image-retrieval","self-supervised-learning","contrastive-learning","embeddings"],"created_at":"2019-10-23T17:20:35Z","pushed_at":"2023-12-16T19:25:54Z","stargazers_count":5617,"language":"Python"},{"full_name":"yandexdataschool/Practical_RL","description":"A course in reinforcement learning in the wild","topics":["reinforcement-learning","course-materials","deep-learning","deep-reinforcement-learning","git-course","mooc","tensorflow","pytorch","pytorch-tutorials","keras"],"created_at":"2017-01-23T16:18:00Z","pushed_at":"2023-12-10T21:27:15Z","stargazers_count":5612,"language":"Jupyter Notebook"},{"full_name":"AntixK/PyTorch-VAE","description":"A Collection of Variational Autoencoders (VAE) in PyTorch.","topics":["pytorch","pytorch-implementation","vae","vae-implementation","deep-learning","reproducible-research","paper-implementations","pytorch-vae","variational-autoencoders","architecture"],"created_at":"2020-01-10T12:41:23Z","pushed_at":"2023-10-16T07:41:08Z","stargazers_count":5603,"language":"Python"},{"full_name":"skorch-dev/skorch","description":"A scikit-learn compatible neural network library that wraps PyTorch","topics":["scikit-learn","pytorch","machine-learning","hacktoberfest","huggingface"],"created_at":"2017-07-18T00:13:54Z","pushed_at":"2024-01-08T14:33:00Z","stargazers_count":5528,"language":"Python"},{"full_name":"facebookresearch/mmf","description":"A modular framework for vision & language multimodal research from Facebook AI Research (FAIR)","topics":["pytorch","vqa","pretrained-models","multimodal","deep-learning","captioning","dialog","textvqa","hateful-memes","multi-tasking"],"created_at":"2018-06-27T04:52:40Z","pushed_at":"2024-01-18T21:14:52Z","stargazers_count":5357,"language":"Python"},{"full_name":"yunjey/stargan","description":"StarGAN - Official PyTorch Implementation (CVPR 2018)","topics":["stargan","pytorch","image-to-image-translation","generative-models","cvpr2018"],"created_at":"2017-11-27T01:43:01Z","pushed_at":"2021-01-23T15:09:58Z","stargazers_count":5170,"language":"Python"},{"full_name":"amdegroot/ssd.pytorch","description":"A PyTorch Implementation of Single Shot MultiBox Detector","topics":["pytorch","deep-learning","ssd","object-detection","computer-vision","machine-learning","image-recognition","webcam"],"created_at":"2017-02-08T01:50:36Z","pushed_at":"2021-12-29T03:19:26Z","stargazers_count":5001,"language":"Python"},{"full_name":"CSAILVision/semantic-segmentation-pytorch","description":"Pytorch implementation for Semantic Segmentation/Scene Parsing on MIT ADE20K dataset","topics":["pytorch","semantic-segmentation","scene-recognition","ade20k"],"created_at":"2017-10-07T00:52:17Z","pushed_at":"2024-01-15T14:26:43Z","stargazers_count":4779,"language":"Shell"},{"full_name":"open-mmlab/mmpose","description":"OpenMMLab Pose Estimation Toolbox and Benchmark.","topics":["pose-estimation","human-pose","pytorch","hrnet","mpii","benchmark","cpm","hourglass","higher-hrnet","crowdpose"],"created_at":"2020-07-08T06:02:55Z","pushed_at":"2024-01-12T08:59:10Z","stargazers_count":4548,"language":"Python"},{"full_name":"open-mmlab/mmdetection3d","description":"OpenMMLab's next-generation platform for general 3D object detection.","topics":["pytorch","3d-object-detection","object-detection","point-cloud"],"created_at":"2020-07-08T03:39:45Z","pushed_at":"2024-01-12T09:51:26Z","stargazers_count":4457,"language":"Python"},{"full_name":"pytorch/ignite","description":"High-level library to help with training and evaluating neural networks in PyTorch flexibly and transparently.","topics":["pytorch","neural-network","python","machine-learning","deep-learning","metrics","hacktoberfest","closember"],"created_at":"2017-11-23T17:31:21Z","pushed_at":"2023-12-10T22:33:39Z","stargazers_count":4410,"language":"Python"},{"full_name":"pyannote/pyannote-audio","description":"Neural building blocks for speaker diarization: speech activity detection, speaker change detection, overlapped speech detection, speaker embedding ","topics":["pytorch","speech-processing","speaker-diarization","speech-activity-detection","speaker-change-detection","speaker-embedding","voice-activity-detection","pretrained-models","overlapped-speech-detection","speaker-recognition"],"created_at":"2016-03-07T17:26:15Z","pushed_at":"2024-01-12T14:17:36Z","stargazers_count":4392,"language":"Python"},{"full_name":"dsgiitr/d2l-pytorch","description":"This project reproduces the book Dive Into Deep Learning (https://d2l.ai/), adapting the code from MXNet into PyTorch.","topics":["deep-learning","d2l","data-science","pytorch-implmention","book","nlp","computer-vision","pytorch","mxnet","dive-into-deep-learning"],"created_at":"2019-05-11T04:35:20Z","pushed_at":"2022-09-24T16:35:15Z","stargazers_count":4134,"language":"Jupyter Notebook"},{"full_name":"bentrevett/pytorch-sentiment-analysis","description":"Tutorials on getting started with PyTorch and TorchText for sentiment analysis.","topics":["pytorch","sentiment-analysis","tutorial","rnn","lstm","fasttext","torchtext","sentiment-classification","cnn","cnn-text-classification"],"created_at":"2017-12-13T13:36:40Z","pushed_at":"2023-10-17T08:31:33Z","stargazers_count":4125,"language":"Jupyter Notebook"},{"full_name":"NVIDIAGameWorks/kaolin","description":"A PyTorch Library for Accelerating 3D Deep Learning Research","topics":["pytorch","3d-deep-learning","neural-networks","differentiable-rendering","artificial-intelligence","camera-api","cuda","rasterization","differentiable-lighting"],"created_at":"2019-11-14T21:09:40Z","pushed_at":"2023-12-20T15:54:51Z","stargazers_count":4084,"language":"Shell"},{"full_name":"KaiyangZhou/deep-person-reid","description":"Torchreid: Deep learning person re-identification in PyTorch.","topics":["deep-learning","pytorch","computer-vision","machine-learning","deep-neural-networks","person-reidentification","person-reid","image-retrieval","re-ranking","metric-learning"],"created_at":"2018-03-11T21:14:39Z","pushed_at":"2024-01-11T13:12:41Z","stargazers_count":4031,"language":"Python"},{"full_name":"timesler/facenet-pytorch","description":"Pretrained Pytorch face detection (MTCNN) and facial recognition (InceptionResnet) models","topics":["pytorch","resnet","inception-resnet","face-recognition","face-identification","face-tracking","mtcnn","pretrained-models","face-detection","facial-recognition"],"created_at":"2019-05-25T01:29:24Z","pushed_at":"2023-11-02T03:20:32Z","stargazers_count":3943,"language":"Python"},{"full_name":"sksq96/pytorch-summary","description":"Model summary in PyTorch similar to `model.summary()` in Keras","topics":["pytorch","keras","summary","deep-learning"],"created_at":"2018-04-23T13:58:04Z","pushed_at":"2023-08-21T13:36:56Z","stargazers_count":3909,"language":"Python"},{"full_name":"chenyuntc/simple-faster-rcnn-pytorch","description":"A simplified implemention of Faster R-CNN that replicate performance from origin paper","topics":["pytorch","object-detection","faster-rcnn","voc","visdom","pythonic","cupy"],"created_at":"2017-12-09T13:13:54Z","pushed_at":"2021-05-15T07:10:53Z","stargazers_count":3880,"language":"Python"},{"full_name":"layumi/Person_reID_baseline_pytorch","description":":bouncing_ball_person: Pytorch ReID: A tiny, friendly, strong pytorch implement of person re-id / vehicle re-id baseline. Tutorial üëâhttps://github.com/layumi/Person_reID_baseline_pytorch/tree/master/tutorial","topics":["open-reid","pytorch","person-reidentification","image-retrieval","person-reid","re-ranking","random-erasing","image-search","market-1501","tutorial"],"created_at":"2017-12-29T10:22:41Z","pushed_at":"2024-01-12T06:11:22Z","stargazers_count":3855,"language":"Python"},{"full_name":"kenshohara/3D-ResNets-PyTorch","description":"3D ResNets for Action Recognition (CVPR 2018)","topics":["deep-learning","computer-vision","pytorch","python","action-recognition","video-recognition"],"created_at":"2017-09-14T12:14:44Z","pushed_at":"2021-01-20T20:31:36Z","stargazers_count":3755,"language":"Python"},{"full_name":"open-mmlab/mmaction2","description":"OpenMMLab's Next Generation Video Understanding Toolbox and Benchmark","topics":["action-recognition","temporal-action-localization","pytorch","video-understanding","tsn","i3d","slowfast","ava","spatial-temporal-action-detection","benchmark"],"created_at":"2020-07-11T07:19:10Z","pushed_at":"2024-01-11T14:38:19Z","stargazers_count":3652,"language":"Python"},{"full_name":"LaurentMazare/tch-rs","description":"Rust bindings for the C++ api of PyTorch.","topics":["pytorch","rust","machine-learning","neural-network","deep-learning"],"created_at":"2019-02-16T21:08:44Z","pushed_at":"2024-01-06T10:31:24Z","stargazers_count":3553,"language":"Rust"},{"full_name":"cleardusk/3DDFA","description":"The PyTorch improved version of TPAMI 2017 paper: Face Alignment in Full Pose Range: A 3D Total Solution.","topics":["face-alignment","pytorch","python","computer-vision","deep-learning","3d-face","3d","3dmm"],"created_at":"2018-06-29T14:19:21Z","pushed_at":"2022-05-14T12:12:21Z","stargazers_count":3519,"language":"Python"},{"full_name":"adap/flower","description":"Flower: A Friendly Federated Learning Framework","topics":["flower","federated-learning","federated-learning-framework","federated-analytics","fleet-learning","fleet-intelligence","deep-learning","machine-learning","pytorch","scikit-learn"],"created_at":"2020-02-17T11:51:29Z","pushed_at":"2024-01-12T17:25:23Z","stargazers_count":3479,"language":"Python"},{"full_name":"polyaxon/polyaxon","description":"MLOps Tools For Managing & Orchestrating The Machine Learning LifeCycle","topics":["deep-learning","machine-learning","artificial-intelligence","data-science","reinforcement-learning","kubernetes","tensorflow","pytorch","keras","mxnet"],"created_at":"2016-12-26T12:48:47Z","pushed_at":"2024-01-04T10:44:00Z","stargazers_count":3431,"language":null},{"full_name":"pytorch/text","description":"Models, data loaders and abstractions for language processing, powered by PyTorch","topics":["nlp","data-loader","deep-learning","pytorch","dataset","models"],"created_at":"2016-12-12T00:56:03Z","pushed_at":"2024-01-08T14:02:38Z","stargazers_count":3408,"language":"Python"},{"full_name":"ikostrikov/pytorch-a2c-ppo-acktr-gail","description":"PyTorch implementation of Advantage Actor Critic (A2C), Proximal Policy Optimization (PPO), Scalable trust-region method for deep reinforcement learning using Kronecker-factored approximation (ACKTR) and Generative Adversarial Imitation Learning (GAIL).","topics":["pytorch","reinforcement-learning","deep-learning","deep-reinforcement-learning","actor-critic","advantage-actor-critic","a2c","ppo","proximal-policy-optimization","acktr"],"created_at":"2017-08-22T15:57:25Z","pushed_at":"2022-05-29T12:40:49Z","stargazers_count":3396,"language":"Python"},{"full_name":"cornellius-gp/gpytorch","description":"A highly efficient implementation of Gaussian Processes in PyTorch","topics":["pytorch","gaussian-processes","gpu-acceleration"],"created_at":"2017-06-09T14:48:20Z","pushed_at":"2024-01-21T03:19:32Z","stargazers_count":3336,"language":"Python"},{"full_name":"POSTECH-CVLab/PyTorch-StudioGAN","description":"StudioGAN is a Pytorch library providing implementations of representative Generative Adversarial Networks (GANs) for conditional/unconditional image generation.","topics":["pytorch","deep-learning","generative-adversarial-network","biggan","stylegan2","machine-learning","stylegan2-ada","stylegan3","data-efficient-gan-training","clean-fid"],"created_at":"2020-06-19T04:09:13Z","pushed_at":"2023-08-07T06:28:07Z","stargazers_count":3335,"language":"Python"},{"full_name":"ml-tooling/ml-workspace","description":"üõ† All-in-one web-based IDE specialized for machine learning and data science.","topics":["machine-learning","deep-learning","data-science","docker","jupyter","jupyter-lab","python","anaconda","tensorflow","pytorch"],"created_at":"2019-05-27T16:55:15Z","pushed_at":"2023-11-14T19:49:37Z","stargazers_count":3248,"language":"Dockerfile"},{"full_name":"mlfoundations/open_flamingo","description":"An open-source framework for training large multimodal models.","topics":["computer-vision","deep-learning","in-context-learning","language-model","multimodal-learning","pytorch","flamingo"],"created_at":"2022-10-20T00:32:35Z","pushed_at":"2023-12-02T04:19:32Z","stargazers_count":3236,"language":"Python"},{"full_name":"higgsfield-ai/higgsfield","description":"Fault-tolerant, highly scalable GPU orchestration, and a machine learning framework designed for training models with billions to trillions of parameters","topics":["cluster-management","deep-learning","distributed","llama","llama2","llm","machine-learning","mlops","pytorch"],"created_at":"2018-05-26T22:47:43Z","pushed_at":"2024-01-11T21:33:13Z","stargazers_count":3213,"language":"Jupyter Notebook"},{"full_name":"jmschrei/pomegranate","description":"Fast, flexible and easy to use probabilistic modelling in Python.","topics":["python","machine-learning","probabilistic-graphical-models","pytorch"],"created_at":"2014-11-24T18:36:58Z","pushed_at":"2024-01-11T19:32:29Z","stargazers_count":3212,"language":"Python"},{"full_name":"catalyst-team/catalyst","description":"Accelerated deep learning R&D","topics":["deep-learning","reinforcement-learning","machine-learning","computer-vision","pytorch","python","distributed-computing","infrastructure","research","reproducibility"],"created_at":"2018-08-20T07:56:13Z","pushed_at":"2023-07-08T17:08:15Z","stargazers_count":3197,"language":"Python"},{"full_name":"DSKSD/DeepNLP-models-Pytorch","description":"Pytorch implementations of various Deep NLP models in cs-224n(Stanford Univ)","topics":["pytorch","nlp","deep-nlp-models","stanford-univ","rnn","neural-network","deep-learning","cs-224n","natural-language-processing"],"created_at":"2017-08-16T01:22:16Z","pushed_at":"2019-10-15T03:26:36Z","stargazers_count":2936,"language":"Jupyter Notebook"},{"full_name":"maciejkula/spotlight","description":"Deep recommender models using PyTorch.","topics":["recommender-system","deep-learning","learning-to-rank","python","machine-learning","matrix-factorization","pytorch"],"created_at":"2017-06-25T18:52:19Z","pushed_at":"2022-12-21T23:38:02Z","stargazers_count":2925,"language":"Python"},{"full_name":"jettify/pytorch-optimizer","description":"torch-optimizer -- collection of optimizers for Pytorch","topics":["pytorch","optimizer","diffgrad","adamod","lamb","yogi","accsgd","adabound","novograd","shampoo"],"created_at":"2020-01-03T03:16:39Z","pushed_at":"2023-11-22T23:34:56Z","stargazers_count":2902,"language":"Makefile"},{"full_name":"osmr/imgclsmob","description":"Sandbox for training deep learning networks","topics":["machine-learning","deep-learning","mxnet","gluon","pytorch","classification","imagenet","neural-network","image-classification","chainer"],"created_at":"2018-07-09T12:57:46Z","pushed_at":"2022-07-04T16:03:02Z","stargazers_count":2884,"language":"Python"},{"full_name":"mseitzer/pytorch-fid","description":"Compute FID scores with PyTorch.","topics":["pytorch","gan","generative-adversarial-network","fid-score","deep-learning","frechet-distance","inception-score","fid"],"created_at":"2018-02-10T12:33:06Z","pushed_at":"2023-04-25T11:26:56Z","stargazers_count":2851,"language":"Python"},{"full_name":"roytseng-tw/Detectron.pytorch","description":"A pytorch implementation of Detectron. Both training from scratch and inferring directly from pretrained Detectron weights are available.","topics":["mask-rcnn","pytorch","detection","pose-estimation","segmentation","detectron"],"created_at":"2018-02-08T08:32:01Z","pushed_at":"2019-09-05T07:44:45Z","stargazers_count":2814,"language":"Python"},{"full_name":"ajbrock/BigGAN-PyTorch","description":"The author's officially unofficial PyTorch BigGAN implementation.","topics":["biggan","pytorch","deep-learning","neural-networks","gans","dogball"],"created_at":"2019-01-20T18:50:49Z","pushed_at":"2023-07-19T17:08:51Z","stargazers_count":2777,"language":"Python"},{"full_name":"huggingface/neuralcoref","description":"‚ú®Fast Coreference Resolution in spaCy with Neural Networks","topics":["python","machine-learning","coreference","spacy","coreference-resolution","spacy-extension","spacy-pipeline","nlp","neural-networks","pytorch"],"created_at":"2017-07-03T13:04:16Z","pushed_at":"2023-04-13T18:40:07Z","stargazers_count":2774,"language":"Python"},{"full_name":"determined-ai/determined","description":"Determined is an open-source machine learning platform that simplifies distributed training, hyperparameter tuning, experiment tracking, and resource management. Works with PyTorch and TensorFlow.","topics":["deep-learning","machine-learning","ml-platform","ml-infrastructure","hyperparameter-optimization","hyperparameter-search","distributed-training","pytorch","tensorflow","hyperparameter-tuning"],"created_at":"2020-04-07T16:12:29Z","pushed_at":"2024-01-13T00:02:01Z","stargazers_count":2695,"language":"Dockerfile"},{"full_name":"L1aoXingyu/code-of-learn-deep-learning-with-pytorch","description":"This is code of book \"Learn Deep Learning with PyTorch\"","topics":["pytorch","pytorch-tutorials-cn","pytorch-tutorial"],"created_at":"2017-06-20T04:00:25Z","pushed_at":"2019-04-24T02:28:18Z","stargazers_count":2682,"language":"Python"},{"full_name":"carpedm20/ENAS-pytorch","description":"PyTorch implementation of \"Efficient Neural Architecture Search via Parameters Sharing\"","topics":["pytorch","neural-architecture-search","google-brain"],"created_at":"2018-02-15T04:54:37Z","pushed_at":"2023-07-06T21:33:33Z","stargazers_count":2667,"language":"Python"},{"full_name":"mars-project/mars","description":"Mars is a tensor-based unified framework for large-scale data computation which scales numpy, pandas, scikit-learn and Python functions.","topics":["python","numpy","tensor","pandas","machine-learning","scikit-learn","tensorflow","pytorch","xgboost","lightgbm"],"created_at":"2018-12-05T16:04:03Z","pushed_at":"2024-01-02T10:00:14Z","stargazers_count":2667,"language":"Python"},{"full_name":"lightly-ai/lightly","description":"A python library for self-supervised learning on images.","topics":["deep-learning","self-supervised-learning","machine-learning","computer-vision","pytorch","embeddings","contrastive-learning"],"created_at":"2020-10-13T13:02:56Z","pushed_at":"2024-01-12T21:46:52Z","stargazers_count":2654,"language":"Makefile"},{"full_name":"znxlwm/pytorch-generative-model-collections","description":"Collection of generative models in Pytorch version.","topics":["pytorch","gan","cgan","infogan","acgan","wgan","dragan","ebgan","began","generative-adversarial-network"],"created_at":"2017-08-31T03:58:25Z","pushed_at":"2020-04-12T11:55:29Z","stargazers_count":2536,"language":"Python"},{"full_name":"aaron-xichen/pytorch-playground","description":"Base pretrained models and datasets in pytorch (MNIST, SVHN, CIFAR10, CIFAR100, STL10, AlexNet, VGG16, VGG19, ResNet, Inception, SqueezeNet)","topics":["pytorch-tutorial","pytorch-tutorials","pytorch","quantization"],"created_at":"2017-04-28T06:22:30Z","pushed_at":"2022-11-22T04:06:41Z","stargazers_count":2522,"language":"Python"},{"full_name":"learnables/learn2learn","description":"A PyTorch Library for Meta-learning Research","topics":["pytorch","maml","meta-learning","learning2learn","learn2learn","metalearning","few-shot","meta-rl","meta-descent","meta-optimization"],"created_at":"2019-08-08T18:22:41Z","pushed_at":"2023-07-03T18:50:47Z","stargazers_count":2455,"language":"Python"},{"full_name":"benedekrozemberczki/pytorch_geometric_temporal","description":"PyTorch Geometric Temporal: Spatiotemporal Signal Processing with Neural Machine Learning Models (CIKM 2021)","topics":["pytorch","graph-neural-networks","temporal-networks","temporal-graphs","gcn","graph-convolutional-networks","deep-learning","network-science","temporal-data","node-embedding"],"created_at":"2020-06-27T01:11:33Z","pushed_at":"2023-12-28T14:21:46Z","stargazers_count":2368,"language":"Python"},{"full_name":"mravanelli/pytorch-kaldi","description":"pytorch-kaldi is a project for developing state-of-the-art DNN/RNN hybrid speech recognition systems. The DNN part is managed by pytorch, while feature extraction, label computation, and decoding are performed with the kaldi toolkit.","topics":["speech-recognition","gru","dnn","kaldi","rnn-model","pytorch","timit","deep-learning","deep-neural-networks","recurrent-neural-networks"],"created_at":"2018-02-27T22:16:33Z","pushed_at":"2022-03-14T05:10:47Z","stargazers_count":2335,"language":"Shell"},{"full_name":"pytorch/audio","description":"Data manipulation and transformation for audio signal processing, powered by PyTorch","topics":["audio","python","io","speech","machine-learning","pytorch","audio-processing"],"created_at":"2017-05-05T00:38:05Z","pushed_at":"2024-01-08T12:12:34Z","stargazers_count":2304,"language":"Python"},{"full_name":"PetrochukM/PyTorch-NLP","description":"Basic Utilities for PyTorch Natural Language Processing (NLP)","topics":["pytorch","nlp","natural-language-processing","pytorch-nlp","torchnlp","data-loader","embeddings","word-vectors","python","deep-learning"],"created_at":"2018-02-25T05:00:36Z","pushed_at":"2023-07-04T21:11:26Z","stargazers_count":2205,"language":"Python"},{"full_name":"pytorch/xla","description":"Enabling PyTorch on XLA Devices (e.g. Google TPU)","topics":["compiler","deep-learning","pytorch","xla"],"created_at":"2018-11-05T22:42:04Z","pushed_at":"2024-01-13T05:12:15Z","stargazers_count":2202,"language":"Shell"},{"full_name":"lucidrains/reformer-pytorch","description":"Reformer, the efficient Transformer, in Pytorch","topics":["artificial-intelligence","transformers","attention-mechanism","machine-learning","pytorch"],"created_at":"2020-01-09T20:42:37Z","pushed_at":"2023-06-21T14:17:49Z","stargazers_count":2012,"language":"Python"},{"full_name":"r9y9/deepvoice3_pytorch","description":"PyTorch implementation of convolutional neural networks-based text-to-speech synthesis models","topics":["tts","speech-synthesis","end-to-end","speech-processing","machine-learning","pytorch","python","multi-speaker"],"created_at":"2017-10-31T12:31:44Z","pushed_at":"2023-12-19T04:21:47Z","stargazers_count":1914,"language":"Python"},{"full_name":"ncullen93/torchsample","description":"High-Level Training, Data Augmentation, and Utilities for Pytorch","topics":["pytorch","deep-learning","data-augmentation","affine","torch"],"created_at":"2017-03-01T02:42:12Z","pushed_at":"2023-10-16T13:35:33Z","stargazers_count":1832,"language":"Python"},{"full_name":"rentruewang/koila","description":"Prevent PyTorch's `CUDA error: out of memory` in just 1 line of code.","topics":["pytorch","lazy-evaluation","out-of-memory","python","machine-learning","deep-learning","memory-management","gradient-accumulation","neural-network"],"created_at":"2021-11-17T08:37:36Z","pushed_at":"2024-01-10T20:59:49Z","stargazers_count":1804,"language":"Python"},{"full_name":"IgorSusmelj/pytorch-styleguide","description":"An unofficial styleguide and best practices summary for PyTorch","topics":["pytorch","styleguide","best-practices"],"created_at":"2019-04-14T16:05:25Z","pushed_at":"2021-12-28T17:41:46Z","stargazers_count":1797,"language":"Python"},{"full_name":"rlworkgroup/garage","description":"A toolkit for reproducible reinforcement learning research.","topics":["rl-algorithms","reproducibility","pytorch","tensorflow"],"created_at":"2018-06-10T21:31:23Z","pushed_at":"2023-05-04T14:44:22Z","stargazers_count":1779,"language":"Python"},{"full_name":"CSAILVision/gandissect","description":"Pytorch-based tools for visualizing and understanding the neurons of a GAN.  https://gandissect.csail.mit.edu/","topics":["pytorch","gan","image-manipulation","deep-learning","interactive-visualizations","generative-adversarial-network","interpretable-ml"],"created_at":"2018-11-19T14:16:08Z","pushed_at":"2021-05-23T10:17:34Z","stargazers_count":1768,"language":"HTML"},{"full_name":"webdataset/webdataset","description":"A high-performance Python-based I/O system for large (and small) deep learning problems, with strong support for PyTorch.","topics":["webdataset","webdataset-format","data-augmentation","pytorch","deep-learning"],"created_at":"2019-08-07T16:42:04Z","pushed_at":"2024-01-06T23:38:57Z","stargazers_count":1732,"language":"Python"},{"full_name":"Lightning-Universe/lightning-flash","description":"Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes for over 15 tasks across 7 data domains","topics":["pytorch-lightning","deep-learning","machine-learning","pytorch","tasks-flash","classification","tabular-data","object-detection","icevision","open3d"],"created_at":"2021-01-28T18:47:16Z","pushed_at":"2023-10-08T14:28:44Z","stargazers_count":1726,"language":"Python"},{"full_name":"wkentaro/pytorch-fcn","description":"PyTorch Implementation of Fully Convolutional Networks. (Training code to reproduce the original result is available.)","topics":["pytorch","computer-vision","deep-learning","semantic-segmentation","convolutional-networks","fcn","fcn8s"],"created_at":"2017-02-16T18:55:08Z","pushed_at":"2023-02-05T15:40:40Z","stargazers_count":1705,"language":"Python"},{"full_name":"zijundeng/pytorch-semantic-segmentation","description":"PyTorch for Semantic Segmentation","topics":["semantic-segmentation","deep-learning","fully-convolutional-networks","pytorch"],"created_at":"2017-06-02T06:45:33Z","pushed_at":"2019-10-25T09:05:41Z","stargazers_count":1697,"language":"Python"},{"full_name":"longcw/faster_rcnn_pytorch","description":"Faster RCNN with PyTorch","topics":["pytorch","detection","faster-rcnn","computer-vision"],"created_at":"2017-01-30T16:06:12Z","pushed_at":"2021-09-25T16:46:09Z","stargazers_count":1680,"language":"Python"},{"full_name":"bearpaw/pytorch-classification","description":"Classification with PyTorch.","topics":["classification","cifar10","cifar100","imagenet","pytorch","resnet","resnext","wide-residual-networks","wrn","densenet"],"created_at":"2017-05-10T05:33:36Z","pushed_at":"2023-04-02T21:00:24Z","stargazers_count":1630,"language":"Python"},{"full_name":"Lightning-Universe/lightning-bolts","description":"Toolbox of models, callbacks, and datasets for AI/ML researchers.","topics":["pytorch","ai","machine-learning","image-processing","natural-language-processing","supervised-learning","gan"],"created_at":"2020-03-25T16:03:30Z","pushed_at":"2024-01-15T11:35:10Z","stargazers_count":1617,"language":"Python"},{"full_name":"pytorch/tnt","description":"A lightweight library for PyTorch training tools and utilities","topics":["pytorch","neural-network","python","machine-learning","deep-learning","reinforcement-learning"],"created_at":"2016-12-10T11:49:58Z","pushed_at":"2024-01-08T07:48:23Z","stargazers_count":1591,"language":"Python"},{"full_name":"longcw/yolo2-pytorch","description":"YOLOv2 in PyTorch","topics":["pytorch","yolo","yolo2","darknet","detection"],"created_at":"2017-02-23T14:19:09Z","pushed_at":"2021-09-29T09:54:02Z","stargazers_count":1521,"language":"Python"},{"full_name":"unslothai/hyperlearn","description":"2-2000x faster ML algos, 50% less memory usage, works on all hardware - new and old.","topics":["machine-learning","python","statistics","scikit-learn","statsmodels","pytorch","deep-learning","data-science","data-analysis","regression-models"],"created_at":"2018-08-27T16:00:47Z","pushed_at":"2022-08-01T09:51:17Z","stargazers_count":1509,"language":"Python"},{"full_name":"gpleiss/efficient_densenet_pytorch","description":"A memory-efficient implementation of DenseNets","topics":["densenet","pytorch","deep-learning"],"created_at":"2017-05-31T17:19:25Z","pushed_at":"2023-06-01T13:11:51Z","stargazers_count":1488,"language":"Python"},{"full_name":"huggingface/pytorch-openai-transformer-lm","description":"üê•A PyTorch implementation of OpenAI's finetuned transformer language model with a script to import the weights pre-trained by OpenAI","topics":["neural-networks","pytorch","openai","language-model","transformer"],"created_at":"2018-06-13T14:02:41Z","pushed_at":"2021-08-09T16:17:12Z","stargazers_count":1476,"language":"Python"},{"full_name":"IBM/pytorch-seq2seq","description":"An open source framework for seq2seq models in PyTorch.","topics":["pytorch","seq2seq","deeplearning"],"created_at":"2017-06-28T15:27:04Z","pushed_at":"2023-01-06T02:27:16Z","stargazers_count":1469,"language":"Python"},{"full_name":"caogang/wgan-gp","description":"A pytorch implementation of Paper \"Improved Training of Wasserstein GANs\"","topics":["wgan-gp","pytorch"],"created_at":"2017-05-04T15:07:18Z","pushed_at":"2023-07-18T07:54:22Z","stargazers_count":1459,"language":"Python"},{"full_name":"BloodAxe/pytorch-toolbelt","description":"PyTorch extensions for fast R&D prototyping and Kaggle farming","topics":["pytorch","kaggle","image-classification","image-segmentation","deep-learning","segmentation","python","image-processing","machine-learning","focal-loss"],"created_at":"2019-03-15T16:02:49Z","pushed_at":"2024-01-12T21:31:41Z","stargazers_count":1455,"language":"Makefile"},{"full_name":"Swall0w/torchstat","description":"Model analyzer in PyTorch","topics":["pytorch","python"],"created_at":"2018-10-26T14:36:14Z","pushed_at":"2023-03-19T03:13:59Z","stargazers_count":1420,"language":"Python"},{"full_name":"szagoruyko/attention-transfer","description":"Improving Convolutional Networks via Attention Transfer (ICLR 2017)","topics":["pytorch","knowledge-distillation","attention","deep-learning"],"created_at":"2017-01-17T15:38:09Z","pushed_at":"2018-07-11T11:49:59Z","stargazers_count":1419,"language":"Python"},{"full_name":"BindsNET/bindsnet","description":"Simulation of spiking neural networks (SNNs) using PyTorch.","topics":["spiking-neural-networks","gpu-computing","pytorch","machine-learning","snn","reinforcement-learning","stdp","dynamic","neurons","simulation"],"created_at":"2018-02-09T19:42:37Z","pushed_at":"2024-01-19T18:24:53Z","stargazers_count":1380,"language":"Python"},{"full_name":"microsoft/DeepSpeed-MII","description":"MII makes low-latency and high-throughput inference possible, powered by DeepSpeed.","topics":["deep-learning","inference","pytorch"],"created_at":"2022-03-23T22:30:45Z","pushed_at":"2024-01-13T02:26:38Z","stargazers_count":1374,"language":"Python"},{"full_name":"BachiLi/redner","description":"Differentiable rendering without approximation.","topics":["rendering","monte-carlo-ray-tracing","computer-vision","computer-graphics","differentiable-rendering","pytorch","tensorflow"],"created_at":"2018-11-10T22:32:27Z","pushed_at":"2022-08-19T13:09:03Z","stargazers_count":1342,"language":"CMake"},{"full_name":"jayleicn/animeGAN","description":"A simple PyTorch Implementation of Generative Adversarial Networks, focusing on anime face drawing.","topics":["pytorch","generative-adversarial-network","dataset"],"created_at":"2017-02-28T14:15:55Z","pushed_at":"2022-08-24T04:29:50Z","stargazers_count":1273,"language":"Jupyter Notebook"},{"full_name":"NVlabs/DG-Net","description":":couple: Joint Discriminative and Generative Learning for Person Re-identification. CVPR'19 (Oral) :couple:","topics":["re-identification","person-reidentification","person-reid","image-retrieval","image-search","open-reid","pytorch","apex","market-1501","dukemtmc-reid"],"created_at":"2019-06-28T18:53:05Z","pushed_at":"2023-07-09T10:24:47Z","stargazers_count":1252,"language":"Python"},{"full_name":"BorealisAI/advertorch","description":"A Toolbox for Adversarial Robustness Research","topics":["pytorch","adversarial-examples","adversarial-example","adversarial-perturbations","adversarial-attacks","adversarial-machine-learning","adversarial-learning","robustness","toolbox","security"],"created_at":"2018-11-29T22:17:33Z","pushed_at":"2023-09-14T02:51:02Z","stargazers_count":1243,"language":"Python"},{"full_name":"benedekrozemberczki/CapsGNN","description":"A PyTorch implementation of \"Capsule Graph Neural Network\" (ICLR 2019).","topics":["capsgnn","capsule-network","capsule-neural-networks","convolution","pytorch","research","tensorflow","machine-learning","deep-learning","gnn"],"created_at":"2019-01-29T18:57:25Z","pushed_at":"2023-03-18T12:08:55Z","stargazers_count":1219,"language":"Python"},{"full_name":"kengz/SLM-Lab","description":"Modular Deep Reinforcement Learning framework in PyTorch. Companion library of the book \"Foundations of Deep Reinforcement Learning\".","topics":["pytorch","reinforcement-learning","deep-reinforcement-learning","benchmark","policy-gradient","dqn","ppo","sac","a2c","a3c"],"created_at":"2017-10-02T22:20:22Z","pushed_at":"2022-08-26T11:31:41Z","stargazers_count":1198,"language":"Shell"},{"full_name":"kamalkraj/BERT-NER","description":"Pytorch-Named-Entity-Recognition-with-BERT","topics":["bert","named-entity-recognition","pytorch","conll-2003","cpp11","bert-ner","inference","curl","postman","pretrained-models"],"created_at":"2019-02-24T10:40:46Z","pushed_at":"2021-05-06T19:38:36Z","stargazers_count":1164,"language":"Python"},{"full_name":"manujosephv/pytorch_tabular","description":"A standard framework for modelling Deep Learning Models for tabular data","topics":["tabular-data","deep-learning","pytorch","pytorch-lightning","hacktoberfest","machine-learning"],"created_at":"2020-12-15T07:17:03Z","pushed_at":"2024-01-06T01:40:36Z","stargazers_count":1120,"language":"Makefile"},{"full_name":"bearpaw/pytorch-pose","description":"A PyTorch toolkit for 2D Human Pose Estimation.","topics":["pose","human-pose-estimation","pytorch","mpii-dataset","mscoco-keypoint","hourglass-network","pose-estimation"],"created_at":"2017-05-02T11:53:52Z","pushed_at":"2021-12-20T20:15:47Z","stargazers_count":1095,"language":"Python"},{"full_name":"carpedm20/DiscoGAN-pytorch","description":"PyTorch implementation of \"Learning to Discover Cross-Domain Relations with Generative Adversarial Networks\"","topics":["gan","generative-model","unsupervised-learning","pytorch"],"created_at":"2017-03-17T10:26:12Z","pushed_at":"2018-03-26T15:26:18Z","stargazers_count":1075,"language":"Jupyter Notebook"},{"full_name":"yjxiong/tsn-pytorch","description":"Temporal Segment Networks (TSN) in PyTorch ","topics":["action-recognition","deep-learning","video-understanding","pytorch","temporal-segment-networks"],"created_at":"2017-08-10T13:34:46Z","pushed_at":"2019-06-21T18:05:02Z","stargazers_count":1059,"language":"Python"},{"full_name":"maum-ai/voicefilter","description":"Unofficial PyTorch implementation of Google AI's VoiceFilter system","topics":["source-separation","audio-separation","speech-separation","pytorch","voicefilter"],"created_at":"2019-03-22T07:37:59Z","pushed_at":"2022-08-24T16:44:16Z","stargazers_count":1007,"language":"Python"},{"full_name":"Shawn1993/cnn-text-classification-pytorch","description":"CNNs for Sentence Classification in PyTorch","topics":["cnn-model","pytorch"],"created_at":"2017-02-10T16:49:39Z","pushed_at":"2023-02-24T14:33:22Z","stargazers_count":1006,"language":"Python"},{"full_name":"ClementPinard/SfmLearner-Pytorch","description":"Pytorch version of SfmLearner from Tinghui Zhou et al.","topics":["pytorch","kitti","disparity","depth","unsupervised"],"created_at":"2017-10-19T15:45:23Z","pushed_at":"2023-01-23T13:04:35Z","stargazers_count":968,"language":"Python"},{"full_name":"freewym/espresso","description":"Espresso: A Fast End-to-End Neural Speech Recognition Toolkit","topics":["python","pytorch","fairseq","kaldi","end-to-end","speech-recognition","asr"],"created_at":"2018-12-02T02:48:48Z","pushed_at":"2023-07-24T00:02:49Z","stargazers_count":938,"language":"Python"},{"full_name":"orobix/Prototypical-Networks-for-Few-shot-Learning-PyTorch","description":"Implementation of Prototypical Networks for Few Shot Learning (https://arxiv.org/abs/1703.05175) in Pytorch","topics":["python","pytorch","cnn","prototypical-networks"],"created_at":"2018-01-29T10:02:00Z","pushed_at":"2022-04-05T12:15:25Z","stargazers_count":919,"language":"Python"},{"full_name":"graykode/gpt-2-Pytorch","description":"Simple Text-Generator with OpenAI gpt-2 Pytorch Implementation","topics":["gpt-2","pytorch","implementation","nlp","text-generator","story-telling","gpt2","natural-language-processing"],"created_at":"2019-02-18T08:06:33Z","pushed_at":"2019-07-08T15:24:35Z","stargazers_count":908,"language":"Python"},{"full_name":"huggingface/torchMoji","description":"üòáA pyTorch implementation of the DeepMoji model: state-of-the-art deep learning model for analyzing sentiment, emotion, sarcasm etc","topics":["machine-learning","deep-learning","natural-language-processing","pytorch","python"],"created_at":"2017-09-29T11:32:57Z","pushed_at":"2023-09-24T00:40:26Z","stargazers_count":902,"language":"Python"},{"full_name":"jacobgil/pytorch-pruning","description":"PyTorch Implementation of [1611.06440] Pruning Convolutional Neural Networks for Resource Efficient Inference","topics":["deep-learning","pruning","pytorch"],"created_at":"2017-06-23T11:43:52Z","pushed_at":"2019-07-12T20:39:41Z","stargazers_count":857,"language":"Python"},{"full_name":"gmalivenko/pytorch2keras","description":"PyTorch to Keras model convertor","topics":["pytorch","keras-model-convertor","keras","tensorflow","onnx","keras-models","tensorflow-models","resnet","densenet","machinelearning"],"created_at":"2017-11-16T20:21:43Z","pushed_at":"2022-12-08T11:42:52Z","stargazers_count":845,"language":"Python"},{"full_name":"LiyuanLucasLiu/LM-LSTM-CRF","description":"Empower Sequence Labeling with Task-Aware Language Model","topics":["ner","language-model","crf","sequence-labeling","pytorch"],"created_at":"2017-09-12T19:24:49Z","pushed_at":"2022-06-22T20:29:39Z","stargazers_count":845,"language":"Python"},{"full_name":"zisianw/FaceBoxes.PyTorch","description":"A PyTorch Implementation of FaceBoxes","topics":["faceboxes","face-detection","pytorch"],"created_at":"2019-01-10T08:04:39Z","pushed_at":"2021-12-08T07:44:01Z","stargazers_count":826,"language":"Python"},{"full_name":"perone/medicaltorch","description":"A medical imaging framework for Pytorch","topics":["machine-learning","deep-learning","medical-imaging","computer-vision","python","pytorch"],"created_at":"2018-02-27T02:50:07Z","pushed_at":"2022-12-27T06:48:51Z","stargazers_count":825,"language":"Python"},{"full_name":"ClementPinard/FlowNetPytorch","description":"Pytorch implementation of FlowNet by Dosovitskiy et al.","topics":["pytorch","flownet","flow"],"created_at":"2017-01-27T14:58:42Z","pushed_at":"2023-03-27T06:46:59Z","stargazers_count":813,"language":"Python"},{"full_name":"bamos/densenet.pytorch","description":"A PyTorch implementation of DenseNet.","topics":["pytorch","deep-learning","densenet"],"created_at":"2017-02-09T15:33:23Z","pushed_at":"2018-08-16T19:33:50Z","stargazers_count":811,"language":"Python"},{"full_name":"pytorch/translate","description":"Translate - a PyTorch Language Library","topics":["artificial-intelligence","machine-learning","onnx","pytorch"],"created_at":"2018-04-24T16:44:04Z","pushed_at":"2023-04-27T20:56:00Z","stargazers_count":810,"language":"Python"},{"full_name":"ProGamerGov/neural-style-pt","description":"PyTorch implementation of neural style transfer algorithm","topics":["neural-style","pytorch","style-transfer","deep-learning","neural-style-pt","neural-style-transfer","nst","styletransfer","pytorch-style-transfer","deep-style"],"created_at":"2018-07-25T19:35:33Z","pushed_at":"2022-10-15T16:07:29Z","stargazers_count":808,"language":"Python"},{"full_name":"nyukat/breast_cancer_classifier","description":"Deep Neural Networks Improve Radiologists' Performance in Breast Cancer Screening","topics":["pytorch","breast-cancer","classification","pretrained-models","deep-learning","neural-network","breast-cancer-diagnosis","medical-imaging","medical-image-analysis","tensorflow"],"created_at":"2018-12-08T22:26:26Z","pushed_at":"2023-12-14T02:38:52Z","stargazers_count":808,"language":"Python"},{"full_name":"kimhc6028/relational-networks","description":"Pytorch implementation of \"A simple neural network module for relational reasoning\" (Relational Networks)","topics":["relational-networks","pytorch","deep-learning"],"created_at":"2017-06-08T05:48:41Z","pushed_at":"2022-12-06T04:12:56Z","stargazers_count":805,"language":"Python"},{"full_name":"jingweiz/pytorch-rl","description":"Deep Reinforcement Learning with pytorch & visdom","topics":["dqn","a3c","pytorch","visdom","deep-reinforcement-learning","reinforcement-learning","deep-learning","actor-critic","acer","trpo"],"created_at":"2017-04-10T11:05:53Z","pushed_at":"2020-07-16T20:01:31Z","stargazers_count":788,"language":"Python"},{"full_name":"geoopt/geoopt","description":"Riemannian Adaptive Optimization Methods with pytorch optim","topics":["optimization","pytorch","riemannian-optimization","riemannian-geometry","riemannian-manifold"],"created_at":"2018-11-07T17:32:53Z","pushed_at":"2023-11-06T00:21:45Z","stargazers_count":766,"language":"Python"},{"full_name":"kakaobrain/torchgpipe","description":"A GPipe implementation in PyTorch","topics":["deep-learning","pytorch","gpipe","model-parallelism","pipeline-parallelism","parallelism","checkpointing"],"created_at":"2019-05-10T10:25:41Z","pushed_at":"2020-09-18T14:00:28Z","stargazers_count":762,"language":"Python"},{"full_name":"benedekrozemberczki/ClusterGCN","description":"A PyTorch implementation of \"Cluster-GCN: An Efficient Algorithm for Training Deep and Large Graph Convolutional Networks\" (KDD 2019).","topics":["gcn","graph-convolution","graph-neural-networks","graph-convolutional-networks","deepwalk","node2vec","pytorch","graphsage","graph2vec","musae"],"created_at":"2019-06-17T19:22:40Z","pushed_at":"2022-11-06T21:13:53Z","stargazers_count":760,"language":"Python"},{"full_name":"higgsfield/Capsule-Network-Tutorial","description":"Pytorch easy-to-follow Capsule Network tutorial","topics":["pytorch","pytorch-tutorials","easy-to-use","clean-code","capsule-network"],"created_at":"2017-12-27T06:25:41Z","pushed_at":"2019-10-04T16:46:07Z","stargazers_count":758,"language":"Jupyter Notebook"},{"full_name":"MushroomRL/mushroom-rl","description":"Python library for Reinforcement Learning.","topics":["reinforcement-learning","deep-reinforcement-learning","deep-learning","openai-gym","atari","rl","pytorch","mujoco","dqn","ddpg"],"created_at":"2017-02-25T19:59:57Z","pushed_at":"2024-01-19T17:35:24Z","stargazers_count":743,"language":"Python"},{"full_name":"hengyuan-hu/bottom-up-attention-vqa","description":"An efficient PyTorch implementation of the winning entry of the 2017 VQA Challenge.","topics":["vqa","pytorch","bottom-up-attention"],"created_at":"2017-12-16T05:00:41Z","pushed_at":"2019-09-04T22:22:55Z","stargazers_count":742,"language":"Python"},{"full_name":"asyml/texar-pytorch","description":"Integrating the Best of TF into PyTorch, for Machine Learning, Natural Language Processing, and Text Generation.  This is part of the CASL project: http://casl-project.ai/","topics":["machine-learning","natural-language-processing","pytorch","deep-learning","text-generation","python","machine-translation","dialog-systems","texar","bert"],"created_at":"2019-03-08T01:04:09Z","pushed_at":"2022-04-14T01:26:58Z","stargazers_count":740,"language":"Python"},{"full_name":"MaximumEntropy/Seq2Seq-PyTorch","description":"Sequence to Sequence Models with PyTorch","topics":["pytorch","seq2seq","deep-learning","rnn"],"created_at":"2017-01-23T08:49:40Z","pushed_at":"2022-03-27T12:36:11Z","stargazers_count":728,"language":"Python"},{"full_name":"rusty1s/pytorch_cluster","description":"PyTorch Extension Library of Optimized Graph Cluster Algorithms","topics":["pytorch","geometric-deep-learning","graph-neural-networks","cluster-algorithms"],"created_at":"2018-01-12T20:56:06Z","pushed_at":"2023-10-12T06:54:28Z","stargazers_count":727,"language":"Python"},{"full_name":"MisaOgura/flashtorch","description":"Visualization toolkit for neural networks in PyTorch! Demo -->","topics":["pytorch","neural-networks","cnn","interpretability","machine-learning","deep-learning","visualization","explainability"],"created_at":"2019-03-22T13:00:57Z","pushed_at":"2023-09-21T07:22:50Z","stargazers_count":717,"language":"Python"},{"full_name":"OML-Team/open-metric-learning","description":"Library for metric learning pipelines and models.","topics":["computer-vision","data-science","deep-learning","metric-learning","pytorch","pytorch-lightning","representation-learning","hacktoberfest","similarity-learning","hacktoberfest-2023"],"created_at":"2022-06-04T13:12:25Z","pushed_at":"2023-12-31T21:48:59Z","stargazers_count":716,"language":"Makefile"},{"full_name":"zhunzhong07/Random-Erasing","description":"Random Erasing Data Augmentation. Experiments on CIFAR10, CIFAR100 and Fashion-MNIST","topics":["data-augmentation","image-classification","object-detection","person-re-identification","pytorch","aaai2020"],"created_at":"2017-09-15T08:45:42Z","pushed_at":"2023-11-08T12:56:54Z","stargazers_count":703,"language":"Python"},{"full_name":"creafz/pytorch-cnn-finetune","description":"Fine-tune pretrained Convolutional Neural Networks with PyTorch","topics":["pytorch","deep-learning","convolutional-neural-networks","pretrained-models"],"created_at":"2018-02-19T06:36:45Z","pushed_at":"2020-01-16T17:24:56Z","stargazers_count":702,"language":"Python"},{"full_name":"Cadene/vqa.pytorch","description":"Visual Question Answering in Pytorch","topics":["vqa","deep-learning","resnet","skipthoughts","pytorch","clevr","coco","torch","vgenome"],"created_at":"2017-05-17T19:41:04Z","pushed_at":"2019-12-11T23:54:10Z","stargazers_count":698,"language":"Python"},{"full_name":"wohlert/semi-supervised-pytorch","description":"Implementations of various VAE-based semi-supervised and generative models in PyTorch","topics":["semi-supervised-learning","pytorch","generative-models"],"created_at":"2017-09-28T09:41:18Z","pushed_at":"2020-03-02T14:23:59Z","stargazers_count":695,"language":"Python"},{"full_name":"ShichenLiu/CondenseNet","description":"CondenseNet: Light weighted CNN for mobile devices","topics":["deep-learning","pytorch","mobile-device"],"created_at":"2017-09-26T01:03:24Z","pushed_at":"2019-11-11T03:38:46Z","stargazers_count":693,"language":"Python"},{"full_name":"BIGBALLON/CIFAR-ZOO","description":"PyTorch implementation of CNNs for CIFAR benchmark","topics":["pytorch","cifar","resnet","resnext","densenet","shake-shake","mixup","cutout","learning-rate-decay","senet"],"created_at":"2019-04-07T15:13:57Z","pushed_at":"2021-02-20T05:14:24Z","stargazers_count":692,"language":"Python"},{"full_name":"AstraZeneca/chemicalx","description":"A PyTorch and TorchDrug based deep learning library for drug pair scoring. (KDD 2022)","topics":["deep-learning","pytorch","deep-chemistry","graph-neural-network","drug","drug-pair","polypharmacy","drug-discovery","pharma","drug-interaction"],"created_at":"2021-12-06T15:32:55Z","pushed_at":"2023-09-11T08:01:43Z","stargazers_count":681,"language":"Python"},{"full_name":"benedekrozemberczki/SimGNN","description":"A PyTorch implementation of  \"SimGNN: A Neural Network Approach to Fast Graph Similarity Computation\" (WSDM 2019). ","topics":["graph-edit-distance","ged","graph-similarity","gcn","graph-convolution","tensor-network","tensorflow","pytorch","neural-network","deep-learning"],"created_at":"2019-01-31T01:15:15Z","pushed_at":"2023-01-12T19:39:39Z","stargazers_count":671,"language":"Python"},{"full_name":"wkentaro/pytorch-for-numpy-users","description":"PyTorch for Numpy users. https://pytorch-for-numpy-users.wkentaro.com","topics":["pytorch","numpy"],"created_at":"2017-05-20T20:18:43Z","pushed_at":"2023-02-05T15:40:12Z","stargazers_count":662,"language":"Python"},{"full_name":"mattmacy/vnet.pytorch","description":"A PyTorch implementation for V-Net: Fully Convolutional Neural Networks for Volumetric Medical Image Segmentation","topics":["pytorch","convolutional-neural-networks","semantic-segmentation","fully-convolutional-networks","lung-segmentation"],"created_at":"2017-03-08T04:13:12Z","pushed_at":"2018-07-06T16:21:09Z","stargazers_count":653,"language":"Python"},{"full_name":"perone/euclidesdb","description":"A multi-model machine learning feature embedding database","topics":["deep-learning","database","search","cpp","pytorch","machine-learning"],"created_at":"2018-11-10T03:03:51Z","pushed_at":"2019-12-30T13:04:54Z","stargazers_count":632,"language":"CMake"},{"full_name":"pytorchbearer/torchbearer","description":"torchbearer: A model fitting library for PyTorch","topics":["pytorch","deep-learning","differentiable-programming","machine-learning","python3","model-fitting"],"created_at":"2018-03-12T16:30:42Z","pushed_at":"2023-12-04T11:10:47Z","stargazers_count":631,"language":"Python"},{"full_name":"locuslab/qpth","description":"A fast and differentiable QP solver for PyTorch.","topics":["deep-learning","pytorch","optimization","quadratic-programming","machine-learning"],"created_at":"2017-02-13T23:10:57Z","pushed_at":"2023-08-31T20:14:42Z","stargazers_count":630,"language":"Python"},{"full_name":"alankbi/detecto","description":"Build fully-functioning computer vision models with PyTorch","topics":["object-detection","machine-learning","computer-vision","python","pytorch","faster-rcnn"],"created_at":"2019-12-11T21:50:28Z","pushed_at":"2023-07-28T19:05:13Z","stargazers_count":607,"language":"Python"},{"full_name":"Lightning-Universe/lightning-transformers","description":"Flexible components pairing ü§ó Transformers with :zap: Pytorch Lightning","topics":["pytorch","pytorch-lightning","transformers","hydra"],"created_at":"2020-12-14T10:45:57Z","pushed_at":"2022-11-21T16:35:36Z","stargazers_count":606,"language":"Python"},{"full_name":"isht7/pytorch-deeplab-resnet","description":"DeepLab resnet v2 model in pytorch","topics":["deep-learning","deeplab","pytorch","semantic-segmentation","deeplab-resnet","pascal-voc","computer-vision"],"created_at":"2017-04-09T23:45:01Z","pushed_at":"2023-09-05T07:32:57Z","stargazers_count":600,"language":"Python"},{"full_name":"szagoruyko/functional-zoo","description":"PyTorch and Tensorflow functional model definitions","topics":["pytorch","tensorflow","pretrained-models"],"created_at":"2017-01-13T10:57:07Z","pushed_at":"2018-02-01T13:16:17Z","stargazers_count":587,"language":"Python"},{"full_name":"richzhang/colorization-pytorch","description":"PyTorch reimplementation of Interactive Deep Colorization","topics":["convolutional-neural-networks","computer-vision","computer-graphics","pytorch","image-colorization","siggraph","deep-learning"],"created_at":"2018-08-10T23:42:30Z","pushed_at":"2020-06-04T21:39:31Z","stargazers_count":587,"language":"Python"},{"full_name":"github-pengge/PyTorch-progressive_growing_of_gans","description":"PyTorch implementation of Progressive Growing of GANs for Improved Quality, Stability, and Variation.","topics":["pytorch","gan","pggan"],"created_at":"2017-10-30T13:27:55Z","pushed_at":"2018-02-04T05:22:30Z","stargazers_count":575,"language":"Python"},{"full_name":"ikostrikov/pytorch-flows","description":"PyTorch implementations of algorithms for density estimation","topics":["pytorch","density-estimation","probabilities","deep-learning","neural-networks"],"created_at":"2018-09-01T19:58:17Z","pushed_at":"2021-05-13T19:59:29Z","stargazers_count":565,"language":"Python"},{"full_name":"ignacio-rocco/detectorch","description":"Detectorch - detectron for PyTorch","topics":["pytorch","detectron","object-detection","object-segmentation","instance-segmentation","python"],"created_at":"2018-03-07T17:08:40Z","pushed_at":"2018-10-30T12:41:48Z","stargazers_count":558,"language":"Jupyter Notebook"},{"full_name":"loudinthecloud/pytorch-ntm","description":"Neural Turing Machines (NTM) - PyTorch Implementation","topics":["pytorch","ntm","python","notebook","neural-network","neural-turing-machines","lstm"],"created_at":"2017-09-24T05:13:53Z","pushed_at":"2018-06-26T08:36:11Z","stargazers_count":558,"language":"Jupyter Notebook"},{"full_name":"GRAAL-Research/poutyne","description":"A simplified framework and utilities for PyTorch","topics":["deep-learning","pytorch","neural-network","keras","machine-learning","data-science","python"],"created_at":"2017-12-07T18:30:17Z","pushed_at":"2023-07-09T16:15:44Z","stargazers_count":557,"language":"Python"},{"full_name":"dgriff777/rl_a3c_pytorch","description":"A3C LSTM  Atari with Pytorch plus A3G design","topics":["python","pytorch","pytorch-a3c","reinforcement-learning","atari","openai-gym","a3c","deep-reinforcement-learning","actor-critic","asynchronous-advantage-actor-critic"],"created_at":"2017-05-25T09:56:30Z","pushed_at":"2023-04-18T10:09:08Z","stargazers_count":553,"language":"Python"},{"full_name":"benedekrozemberczki/GraphWaveletNeuralNetwork","description":"A PyTorch implementation of \"Graph Wavelet Neural Network\" (ICLR 2019)","topics":["gcn","graph-convolutional-network","graph-convolution","machine-learning","deep-learning","iclr","sklearn","pytorch","deepwalk","node2vec"],"created_at":"2019-01-18T18:33:55Z","pushed_at":"2023-03-18T12:13:09Z","stargazers_count":550,"language":"Python"},{"full_name":"longcw/RoIAlign.pytorch","description":"RoIAlign & crop_and_resize for PyTorch","topics":["pytorch"],"created_at":"2017-12-05T13:32:49Z","pushed_at":"2022-03-01T13:16:52Z","stargazers_count":549,"language":"C"},{"full_name":"dasguptar/treelstm.pytorch","description":"Tree LSTM implementation in PyTorch","topics":["pytorch","deep-learning","deeplearning","tree-lstm","machine-learning","machinelearning","treelstm","recursive-neural-networks"],"created_at":"2017-04-07T11:11:53Z","pushed_at":"2019-09-30T11:01:11Z","stargazers_count":546,"language":"Python"},{"full_name":"RobotLocomotion/pytorch-dense-correspondence","description":"Code for \"Dense Object Nets:  Learning Dense Visual Object Descriptors By and For Robotic Manipulation\"","topics":["pytorch","robotics","manipulation","computer-vision","deep-learning","3d","vision","artificial-intelligence","self-supervised-learning"],"created_at":"2018-02-13T16:41:18Z","pushed_at":"2023-05-09T09:22:39Z","stargazers_count":545,"language":"Python"},{"full_name":"clcarwin/convert_torch_to_pytorch","description":"Convert torch t7 model to pytorch model and source.","topics":["pytorch"],"created_at":"2017-02-16T06:23:52Z","pushed_at":"2023-07-10T23:21:03Z","stargazers_count":532,"language":"Python"},{"full_name":"ne7ermore/torch-light","description":"Deep-learning  by using Pytorch.  Basic nns like Logistic, CNN, RNN, LSTM and some examples are implemented by complex model. ","topics":["deep-learning","pytorch","reinforcement-learning"],"created_at":"2017-06-12T07:50:50Z","pushed_at":"2020-11-20T13:04:49Z","stargazers_count":529,"language":"Python"},{"full_name":"akanimax/pro_gan_pytorch","description":"Unofficial PyTorch implementation of the paper titled \"Progressive growing of GANs for improved Quality, Stability, and Variation\"","topics":["gan","pytorch","convolutional-neural-network","adversarial-machine-learning","progressive-growing-of-gans"],"created_at":"2018-07-02T09:14:36Z","pushed_at":"2023-10-03T23:34:25Z","stargazers_count":527,"language":"Python"},{"full_name":"pemami4911/neural-combinatorial-rl-pytorch","description":"PyTorch implementation of Neural Combinatorial Optimization with Reinforcement Learning https://arxiv.org/abs/1611.09940","topics":["pytorch","reinforcement-learning","seq2seq","neural-combinatorial-optimization"],"created_at":"2017-06-20T14:10:01Z","pushed_at":"2018-05-29T13:40:08Z","stargazers_count":511,"language":"Python"},{"full_name":"Omegastick/pytorch-cpp-rl","description":"PyTorch C++ Reinforcement Learning","topics":["pytorch","cpp","cplusplus","reinforcement-learning","reinforcement-learning-algorithms","a2c","ppo","pytorch-rl","pytorch-cpp-frontend","libtorch"],"created_at":"2019-03-25T00:41:12Z","pushed_at":"2020-05-03T01:24:28Z","stargazers_count":498,"language":"CMake"},{"full_name":"prlz77/ResNeXt.pytorch","description":"Reproduces ResNet-V3 with pytorch","topics":["pytorch","cifar","resnet","resnext"],"created_at":"2017-03-30T07:35:24Z","pushed_at":"2020-08-01T23:01:12Z","stargazers_count":498,"language":"Python"},{"full_name":"elbayadm/attn2d","description":"Pervasive Attention: 2D Convolutional Networks for Sequence-to-Sequence Prediction","topics":["nmt","nlp","pytorch","fairseq","neural-machine-translation"],"created_at":"2018-08-10T09:47:53Z","pushed_at":"2021-05-08T10:55:34Z","stargazers_count":497,"language":"Python"},{"full_name":"fancompute/wavetorch","description":" üåä Numerically solving and backpropagating through the wave equation","topics":["wave-equation","differential-equations","time-series","vowel-recognition","recurrent-neural-network","rnn","pytorch"],"created_at":"2019-02-12T21:23:46Z","pushed_at":"2020-02-08T05:12:15Z","stargazers_count":495,"language":"Python"},{"full_name":"kaushalshetty/Structured-Self-Attention","description":"A Structured Self-attentive Sentence Embedding","topics":["attention-mechanism","attention-model","self-attention","self-attentive-rnn","pytorch","deep-learning","python3","attention","visualization","classification"],"created_at":"2018-02-01T07:38:55Z","pushed_at":"2019-09-22T21:00:24Z","stargazers_count":494,"language":"Python"},{"full_name":"shayneobrien/generative-models","description":"Annotated, understandable, and visually interpretable PyTorch implementations of: VAE, BIRVAE, NSGAN, MMGAN, WGAN, WGANGP, LSGAN, DRAGAN, BEGAN, RaGAN, InfoGAN, fGAN, FisherGAN","topics":["python","generative-adversarial-network","machine-learning","pytorch","discriminator","gan","wasserstein","vae","generative-models","began"],"created_at":"2018-04-17T15:36:19Z","pushed_at":"2018-11-19T15:42:20Z","stargazers_count":487,"language":"Jupyter Notebook"},{"full_name":"salesforce/matchbox","description":"Write PyTorch code at the level of individual examples, then run it efficiently on minibatches.","topics":["deep-learning","pytorch","nlp","minibatch"],"created_at":"2018-03-28T07:45:23Z","pushed_at":"2022-02-12T14:34:47Z","stargazers_count":485,"language":"Python"},{"full_name":"adambielski/CapsNet-pytorch","description":"PyTorch implementation of NIPS 2017 paper Dynamic Routing Between Capsules","topics":["capsnet","capsules","pytorch","mnist","machine-learning","deep-learning","dynamic-routing-between-capsules"],"created_at":"2017-11-28T22:33:57Z","pushed_at":"2021-04-13T11:39:54Z","stargazers_count":479,"language":"Python"},{"full_name":"fartashf/vsepp","description":"PyTorch Code for the paper \"VSE++: Improving Visual-Semantic Embeddings with Hard Negatives\"","topics":["bmvc","vse","pytorch","negatives","paper"],"created_at":"2017-06-29T20:35:17Z","pushed_at":"2021-12-08T21:38:15Z","stargazers_count":477,"language":"Python"},{"full_name":"nv-tlabs/STEAL","description":"STEAL - Learning Semantic Boundaries from Noisy Annotations (CVPR 2019)","topics":["cvpr2019","pytorch","deep-learning","semantic-boundaries","semantic-segmentation","steal","annotation","devil-is-in-the-edges","nv-tlabs"],"created_at":"2019-04-15T21:53:33Z","pushed_at":"2023-10-23T16:32:14Z","stargazers_count":474,"language":"Python"},{"full_name":"locuslab/optnet","description":"OptNet: Differentiable Optimization as a Layer in Neural Networks","topics":["deep-learning","optimization","pytorch","paper","machine-learning"],"created_at":"2017-03-01T22:27:29Z","pushed_at":"2020-03-26T17:17:08Z","stargazers_count":470,"language":"Python"},{"full_name":"twtygqyy/pytorch-SRResNet","description":"pytorch implementation for Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network arXiv:1609.04802","topics":["pytorch","resolution","pytorch-srresnet"],"created_at":"2017-04-19T01:57:08Z","pushed_at":"2018-03-26T14:26:18Z","stargazers_count":463,"language":"Python"},{"full_name":"Schlumberger/joint-vae","description":"Pytorch implementation of JointVAE, a framework for disentangling continuous and discrete factors of variation :star2:","topics":["disentangled-representations","disentanglement","gumbel-softmax","vae","generative-models","pytorch"],"created_at":"2018-05-08T01:48:14Z","pushed_at":"2019-04-02T01:46:48Z","stargazers_count":453,"language":"Python"},{"full_name":"chingyaoc/ggnn.pytorch","description":"A PyTorch Implementation of Gated Graph Sequence Neural Networks (GGNN)","topics":["graph","pytorch","ggnn","gnns"],"created_at":"2018-02-01T08:14:42Z","pushed_at":"2019-07-31T14:55:39Z","stargazers_count":451,"language":"Shell"},{"full_name":"sinkingsugar/nimtorch","description":"PyTorch - Python + Nim","topics":["machine-learning","cuda","wasm","nim","pytorch","artificial-intelligence","artificial-neural-networks"],"created_at":"2018-07-31T09:43:26Z","pushed_at":"2019-06-08T14:44:48Z","stargazers_count":450,"language":"Nim"},{"full_name":"ruiminshen/yolo2-pytorch","description":"PyTorch implementation of the YOLO (You Only Look Once) v2","topics":["yolo2","pytorch","python","object-detection","deep-learning","deep-neural-networks","caffe2","onnx","computer-vision"],"created_at":"2017-12-23T04:30:38Z","pushed_at":"2018-05-12T13:43:37Z","stargazers_count":435,"language":"Python"},{"full_name":"yunjey/mnist-svhn-transfer","description":"PyTorch Implementation of CycleGAN and SSGAN for Domain Transfer (Minimal)","topics":["pytorch","domain-transfer","cycle-gan","semi-supervised-gan","mnist","svhn"],"created_at":"2017-05-03T13:16:16Z","pushed_at":"2017-05-27T11:55:24Z","stargazers_count":420,"language":"Shell"},{"full_name":"lemonhu/NER-BERT-pytorch","description":"PyTorch solution of named entity recognition task Using Google AI's pre-trained BERT model.","topics":["ner","named-entity-recognition","entity-extraction","chinese-ner","google-bert","transformer","msra","information-extraction","pytorch"],"created_at":"2019-01-04T08:13:41Z","pushed_at":"2023-03-30T13:57:17Z","stargazers_count":416,"language":"Python"},{"full_name":"abhiskk/fast-neural-style","description":" pytorch implementation of fast-neural-style","topics":["neural-style","deep-learning","pytorch"],"created_at":"2017-03-12T17:49:06Z","pushed_at":"2022-06-22T03:16:21Z","stargazers_count":414,"language":"Python"},{"full_name":"PistonY/torch-toolbox","description":"üõ† Toolbox to extend PyTorch functionalities","topics":["pytorch","toolbox","flops","metrics","initializers","labelsmoothing","cosinewarmuplr","switchnorm","swish","lookahead"],"created_at":"2019-05-06T09:17:09Z","pushed_at":"2023-06-07T08:01:23Z","stargazers_count":411,"language":"Python"},{"full_name":"Lotayou/densebody_pytorch","description":"PyTorch implementation of CloudWalk's recent work DenseBody","topics":["human","3d-reconstruction","pytorch","pose-estimation"],"created_at":"2019-03-29T07:38:37Z","pushed_at":"2019-08-26T03:22:27Z","stargazers_count":411,"language":"Python"},{"full_name":"Media-Smart/vedaseg","description":"A semantic segmentation toolbox based on PyTorch","topics":["pytorch","semantic-segmentation","deeplabv3plus","deeplabv3","pspnet","unet","fpn"],"created_at":"2019-12-13T09:09:17Z","pushed_at":"2021-11-29T03:08:29Z","stargazers_count":405,"language":"Python"},{"full_name":"hitvoice/DrQA","description":"A pytorch implementation of Reading Wikipedia to Answer Open-Domain Questions.","topics":["pytorch","squad","drqa"],"created_at":"2017-06-29T03:44:58Z","pushed_at":"2022-03-26T16:26:09Z","stargazers_count":404,"language":"Shell"},{"full_name":"ikostrikov/pytorch-trpo","description":"PyTorch implementation of Trust Region Policy Optimization","topics":["reinforcement-learning","continuous-control","deep-learning","trust-region-policy-optimization","trpo","mujoco","pytorch","deep-reinforcement-learning"],"created_at":"2017-05-26T12:33:18Z","pushed_at":"2018-09-13T13:59:57Z","stargazers_count":400,"language":"Python"},{"full_name":"achaiah/pywick","description":"High-level batteries-included neural network training library for Pytorch","topics":["pytorch","semantic-segmentation","classification","deep-learning","neural-networks"],"created_at":"2019-03-25T15:42:47Z","pushed_at":"2022-02-04T15:57:11Z","stargazers_count":397,"language":"Python"},{"full_name":"benedekrozemberczki/MixHop-and-N-GCN","description":"An implementation of \"MixHop: Higher-Order Graph Convolutional Architectures via Sparsified Neighborhood Mixing\" (ICML 2019).","topics":["pytorch","pytorch-cnn","deep-learning","machine-learning","deepwalk","node2vec","gcn","ngcn","graph-convolution","convolutional-neural-networks"],"created_at":"2019-02-23T13:59:16Z","pushed_at":"2022-11-06T21:17:00Z","stargazers_count":396,"language":"Python"},{"full_name":"LaurentMazare/ocaml-torch","description":"OCaml bindings for PyTorch","topics":["ocaml","pytorch","machine-learning","artificial-intelligence","neural-network","tensor","gpu","deep-learning"],"created_at":"2018-10-02T23:14:32Z","pushed_at":"2023-05-10T15:34:44Z","stargazers_count":396,"language":"OCaml"},{"full_name":"xiadingZ/video-caption.pytorch","description":"pytorch implementation of video captioning","topics":["pytorch","video-captioning","deep-learning"],"created_at":"2018-01-07T03:14:44Z","pushed_at":"2019-08-19T11:25:58Z","stargazers_count":394,"language":"Python"},{"full_name":"mindsdb/lightwood","description":"Lightwood is Legos for Machine Learning. ","topics":["ml","automl","encoders","mindsdb","probabilistic-programming","pytorch","machine-learning","neural-networks","hacktoberfest"],"created_at":"2019-05-20T21:31:14Z","pushed_at":"2023-12-25T13:03:54Z","stargazers_count":391,"language":"Python"},{"full_name":"lium-lst/nmtpytorch","description":"Sequence-to-Sequence Framework in PyTorch","topics":["deep-learning","pytorch","seq2seq","nmt","neural-machine-translation","asr","speech-recognition","multimodality","cnn"],"created_at":"2017-12-18T10:07:19Z","pushed_at":"2023-01-05T07:30:44Z","stargazers_count":391,"language":"Python"},{"full_name":"GunhoChoi/Kind-PyTorch-Tutorial","description":"Kind PyTorch Tutorial for beginners","topics":["pytorch-tutorial","pytorch","python","deep-learning"],"created_at":"2017-03-22T12:43:48Z","pushed_at":"2017-06-08T16:10:43Z","stargazers_count":390,"language":"Jupyter Notebook"},{"full_name":"shobrook/sequitur","description":"Library of autoencoders for sequential data","topics":["autoencoder","lstm","pytorch","sequence","autoencoder-model","time-series"],"created_at":"2019-09-27T22:51:05Z","pushed_at":"2023-11-04T05:41:34Z","stargazers_count":387,"language":"Python"},{"full_name":"bodokaiser/piwise","description":"Pixel-wise segmentation on VOC2012 dataset using pytorch.","topics":["pytorch","semantic-segmentation","computer-vision","segnet","fcn"],"created_at":"2017-03-21T08:05:59Z","pushed_at":"2018-12-26T14:04:41Z","stargazers_count":382,"language":"Python"},{"full_name":"layumi/Seg-Uncertainty","description":"IJCAI2020 & IJCV2021 :city_sunrise: Unsupervised Scene Adaptation with Memory Regularization in vivo ","topics":["ijcai","domain-adaptation","semantic-segmentation","pytorch","ijcai2020","pytorch-implementation","gta5","cityscapes","synthia","robotcar"],"created_at":"2020-01-29T00:48:34Z","pushed_at":"2023-08-11T10:01:30Z","stargazers_count":374,"language":"Python"},{"full_name":"zuoxingdong/lagom","description":"lagom: A PyTorch infrastructure for rapid prototyping of reinforcement learning algorithms.","topics":["reinforcement-learning","pytorch","machine-learning","python","research","deep-learning","artificial-intelligence","policy-gradient","evolution-strategies","deep-reinforcement-learning"],"created_at":"2017-12-21T09:51:28Z","pushed_at":"2022-11-19T05:52:37Z","stargazers_count":373,"language":"Python"},{"full_name":"vadimkantorov/caffemodel2pytorch","description":"Convert Caffe models to PyTorch","topics":["pytorch","caffe","converter"],"created_at":"2018-01-30T01:02:52Z","pushed_at":"2023-03-30T07:08:33Z","stargazers_count":372,"language":"Python"},{"full_name":"hungtuchen/pytorch-dqn","description":"Deep Q-Learning Network in pytorch (not actively maintained)","topics":["pytorch","deep-q-network","deep-reinforcement-learning"],"created_at":"2017-03-04T05:24:15Z","pushed_at":"2017-11-01T02:46:24Z","stargazers_count":371,"language":"Python"},{"full_name":"msamogh/nonechucks","description":"Deal with bad samples in your dataset dynamically, use Transforms as Filters, and more!","topics":["pytorch","data-processing","data-preprocessing","data-pipeline","data-cleaning","preprocessing","machine-learning","torch"],"created_at":"2018-10-05T08:48:46Z","pushed_at":"2022-09-22T23:03:31Z","stargazers_count":370,"language":"Python"},{"full_name":"osai-ai/tensor-stream","description":"A library for real-time video stream decoding to CUDA memory","topics":["video-processing","video","c-plus-plus","python","pytorch","cuda"],"created_at":"2018-08-14T08:20:04Z","pushed_at":"2023-04-27T14:04:41Z","stargazers_count":369,"language":"C++"},{"full_name":"mratsim/Amazon-Forest-Computer-Vision","description":"Amazon Forest Computer Vision: Satellite Image tagging code using PyTorch / Keras with lots of PyTorch tricks","topics":["pytorch","data-augmentation","kaggle-competition","kaggle","deep-learning","computer-vision","keras","neural-networks","neural-network-example","transfer-learning"],"created_at":"2017-09-08T10:57:58Z","pushed_at":"2019-11-08T19:33:21Z","stargazers_count":363,"language":"Jupyter Notebook"},{"full_name":"felixgwu/img_classification_pk_pytorch","description":"Quickly comparing your image classification models with the state-of-the-art models (such as DenseNet, ResNet, ...)","topics":["pytorch","cifar","deep-learning","computer-vision"],"created_at":"2017-04-01T07:33:45Z","pushed_at":"2019-04-12T02:32:20Z","stargazers_count":358,"language":"Python"},{"full_name":"kefirski/pytorch_RVAE","description":"Recurrent Variational Autoencoder that generates sequential data implemented with pytorch","topics":["pytorch","python","vae","deep-learning","nlp"],"created_at":"2017-02-12T09:54:09Z","pushed_at":"2017-03-15T07:23:52Z","stargazers_count":355,"language":"Python"},{"full_name":"davidmascharka/tbd-nets","description":"PyTorch implementation of \"Transparency by Design: Closing the Gap Between Performance and Interpretability in Visual Reasoning\"","topics":["machine-learning","pytorch","visualization","deep-learning","visual-question-answering","vqa","neural-networks"],"created_at":"2018-03-13T18:54:02Z","pushed_at":"2021-12-07T20:02:33Z","stargazers_count":352,"language":"Jupyter Notebook"},{"full_name":"benedekrozemberczki/APPNP","description":"A PyTorch implementation of \"Predict then Propagate: Graph Neural Networks meet Personalized PageRank\" (ICLR 2019).","topics":["gcn","pytorch","graph-convolutional-neural-networks","graph-neural-network","research","machine-learning","deep-learning","deepwalk","node2vec","graph-attention"],"created_at":"2019-02-12T10:03:48Z","pushed_at":"2022-11-06T21:13:30Z","stargazers_count":351,"language":"Python"},{"full_name":"atgambardella/pytorch-es","description":"Evolution Strategies in PyTorch","topics":["python","pytorch","machinelearning"],"created_at":"2017-03-21T03:25:36Z","pushed_at":"2017-09-11T15:31:17Z","stargazers_count":341,"language":"Python"},{"full_name":"barissayil/SentimentAnalysis","description":"Sentiment analysis neural network trained by fine-tuning BERT, ALBERT, or DistilBERT on the Stanford Sentiment Treebank.","topics":["bert","nlp","machine-learning","pytorch","pytorch-implementation","vuejs","flask","transformer","huggingface","huggingface-transformer"],"created_at":"2019-12-27T11:54:06Z","pushed_at":"2023-06-12T21:34:19Z","stargazers_count":340,"language":"Python"},{"full_name":"jacobgil/pytorch-explain-black-box","description":"PyTorch implementation of Interpretable Explanations of Black Boxes by Meaningful Perturbation","topics":["pytorch","visualization","deep-learning","deeplearning","blackbox"],"created_at":"2017-06-04T11:30:48Z","pushed_at":"2021-11-30T15:29:56Z","stargazers_count":333,"language":"Python"},{"full_name":"domainadaptation/salad","description":"A toolbox for domain adaptation and semi-supervised learning. Contributions welcome.","topics":["domain-adaptation","deep-learning","machine-learning","pytorch"],"created_at":"2018-09-23T01:07:22Z","pushed_at":"2021-05-15T17:14:13Z","stargazers_count":329,"language":"Makefile"},{"full_name":"dmmiller612/sparktorch","description":"Train and run Pytorch models on Apache Spark.","topics":["pytorch","sparktorch","deep-learning","apache-spark","pipelines","inference","distributed-computing"],"created_at":"2019-11-29T18:38:53Z","pushed_at":"2023-05-11T15:31:19Z","stargazers_count":329,"language":"Dockerfile"},{"full_name":"stared/thinking-in-tensors-writing-in-pytorch","description":"Thinking in tensors, writing in PyTorch (a hands-on deep learning intro)","topics":["pytorch","deep-learning","tensor","pytorch-tutorial"],"created_at":"2018-12-26T13:13:23Z","pushed_at":"2022-12-22T23:50:51Z","stargazers_count":325,"language":"Jupyter Notebook"},{"full_name":"vinhkhuc/PyTorch-Mini-Tutorials","description":"Minimal tutorials for PyTorch","topics":["machine-learning","deep-learning","pytorch","python"],"created_at":"2017-02-13T06:15:47Z","pushed_at":"2020-09-16T09:41:22Z","stargazers_count":323,"language":"Python"},{"full_name":"ixaxaar/pytorch-dnc","description":"Differentiable Neural Computers, Sparse Access Memory and Sparse Differentiable Neural Computers, for Pytorch","topics":["pytorch","differentiable-neural-computers","rnn","dnc"],"created_at":"2017-10-26T14:39:56Z","pushed_at":"2022-08-11T20:11:05Z","stargazers_count":319,"language":"Python"},{"full_name":"wohlert/generative-query-network-pytorch","description":"Generative Query Network (GQN) in PyTorch as described in \"Neural Scene Representation and Rendering\"","topics":["generative-models","pytorch","deepmind","gqn"],"created_at":"2018-07-28T14:36:30Z","pushed_at":"2019-06-24T08:56:14Z","stargazers_count":319,"language":"Python"},{"full_name":"chenxi116/PNASNet.pytorch","description":"PyTorch implementation of PNASNet-5 on ImageNet","topics":["pytorch","imagenet","neural-architecture-search","deep-learning","automl"],"created_at":"2018-07-08T20:26:13Z","pushed_at":"2022-08-04T20:12:17Z","stargazers_count":317,"language":"Python"},{"full_name":"truskovskiyk/nima.pytorch","description":"NIMA: Neural IMage Assessment","topics":["nima","pytorch","deep-learning","python","machine-learning","computer-vision","neural-network","arxiv"],"created_at":"2018-03-13T19:49:24Z","pushed_at":"2022-06-21T22:14:08Z","stargazers_count":312,"language":"Python"},{"full_name":"kentsommer/pytorch-value-iteration-networks","description":"Pytorch implementation of Value Iteration Networks (NIPS 2016 best paper)","topics":["pytorch","value-iteration"],"created_at":"2017-03-23T07:09:54Z","pushed_at":"2020-10-02T04:48:06Z","stargazers_count":311,"language":"Python"},{"full_name":"Kyubyong/pytorch_exercises","description":"","topics":["pytorch","neural-networks","exercises"],"created_at":"2017-09-25T05:26:25Z","pushed_at":"2017-09-28T12:25:23Z","stargazers_count":310,"language":"Jupyter Notebook"},{"full_name":"benedekrozemberczki/AttentionWalk","description":"A PyTorch Implementation of \"Watch Your Step: Learning Node Embeddings via Graph Attention\" (NeurIPS 2018).","topics":["pytorch","torch","attention","deepwalk","node2vec","word2vec","matrix-factorization","deep-learning","structural-attention","walklet"],"created_at":"2019-01-11T15:09:12Z","pushed_at":"2022-11-06T21:09:53Z","stargazers_count":310,"language":"Python"},{"full_name":"arnas/awesome-pytorch-scholarship","description":" A list of awesome PyTorch scholarship articles, guides, blogs, courses and other resources.","topics":["pytorch","scholarship","udacity"],"created_at":"2018-11-09T22:54:47Z","pushed_at":"2018-11-24T05:11:33Z","stargazers_count":310,"language":"unknown"},{"full_name":"zsef123/EfficientNets-PyTorch","description":"A PyTorch implementation of \" EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks.\"","topics":["pytorch","efficientnet","deep-learning"],"created_at":"2019-05-30T13:20:42Z","pushed_at":"2019-12-18T11:18:08Z","stargazers_count":308,"language":"Python"},{"full_name":"ikostrikov/pytorch-meta-optimizer","description":"A PyTorch implementation of  Learning to learn by gradient descent by gradient descent","topics":["pytorch","deep-learning","gradient-descent"],"created_at":"2017-01-30T05:26:28Z","pushed_at":"2018-08-27T09:04:29Z","stargazers_count":306,"language":"Python"},{"full_name":"Stonesjtu/Pytorch-NCE","description":"The Noise Contrastive Estimation for softmax output written in Pytorch","topics":["pytorch","nce","language-model","nce-criterion","importance-sampling","speedup","softmax"],"created_at":"2017-05-19T01:18:57Z","pushed_at":"2019-11-06T14:40:59Z","stargazers_count":306,"language":"Python"},{"full_name":"ikostrikov/pytorch-ddpg-naf","description":"Implementation of algorithms for continuous control (DDPG and NAF).","topics":["pytorch","reinforcement-learning","deep-learning","ddpg","deep-deterministic-policy-gradient"],"created_at":"2017-01-28T21:45:50Z","pushed_at":"2021-02-16T03:42:25Z","stargazers_count":303,"language":"Python"},{"full_name":"TorchDrift/TorchDrift","description":"Drift Detection for your PyTorch Models","topics":["drift-detection","pytorch","neural-networks","ai"],"created_at":"2021-02-10T09:27:48Z","pushed_at":"2022-08-26T08:15:45Z","stargazers_count":300,"language":"Jupyter Notebook"},{"full_name":"alibaba-edu/simple-effective-text-matching-pytorch","description":"A pytorch implementation of the ACL2019 paper \"Simple and Effective Text Matching with Richer Alignment Features\".","topics":["nlp","deep-learning","pytorch","snli","quora-question-pairs"],"created_at":"2019-09-19T07:50:23Z","pushed_at":"2022-08-24T08:06:59Z","stargazers_count":299,"language":"Python"},{"full_name":"c0nn3r/RetinaNet","description":"An implementation of RetinaNet in PyTorch.","topics":["pytorch","retinanet","object-detection"],"created_at":"2017-08-30T00:23:58Z","pushed_at":"2018-09-15T05:37:51Z","stargazers_count":298,"language":"Python"},{"full_name":"r9y9/tacotron_pytorch","description":"PyTorch implementation of Tacotron speech synthesis model.","topics":["speech-synthesis","pytorch","tacotron","python","speech"],"created_at":"2017-09-15T11:42:38Z","pushed_at":"2019-07-12T04:37:27Z","stargazers_count":295,"language":"Python"},{"full_name":"edouardoyallon/pyscatwave","description":"Fast Scattering Transform with CuPy/PyTorch","topics":["deep-learning","scattering-transform","pytorch"],"created_at":"2017-03-25T11:21:50Z","pushed_at":"2020-02-22T23:17:37Z","stargazers_count":294,"language":"Python"},{"full_name":"theeluwin/pytorch-sgns","description":"Skipgram Negative Sampling implemented in PyTorch","topics":["pytorch","word2vec","skipgram","pytorch-implementation"],"created_at":"2017-10-10T14:37:41Z","pushed_at":"2021-03-21T11:20:29Z","stargazers_count":294,"language":"Python"},{"full_name":"feedly/transfer-nlp","description":"NLP library designed for reproducible experimentation management","topics":["nlp","transfer-learning","framework","playground","natural-language-understanding","language-model","pytorch"],"created_at":"2019-03-12T20:00:31Z","pushed_at":"2020-05-28T17:32:42Z","stargazers_count":290,"language":"Python"},{"full_name":"ksw0306/ClariNet","description":"A Pytorch Implementation of ClariNet","topics":["clarinet","wavenet","parallel-wavenet","pytorch"],"created_at":"2018-11-07T04:37:15Z","pushed_at":"2019-08-05T17:58:06Z","stargazers_count":289,"language":"Python"},{"full_name":"Media-Smart/volksdep","description":"volksdep is an open-source toolbox for deploying and accelerating PyTorch, ONNX and TensorFlow models with TensorRT.","topics":["pytorch","onnx","tensorrt","deploy","tensorflow","jetson-nano","jetson-tx2","jetson-xavier","inference","python"],"created_at":"2020-05-21T08:43:10Z","pushed_at":"2021-02-05T02:47:21Z","stargazers_count":284,"language":"Python"},{"full_name":"tomrunia/PyTorchWavelets","description":"PyTorch implementation of the wavelet analysis from Torrence & Compo (1998)","topics":["pytorch","wavelets","filtering","signal-processing"],"created_at":"2018-04-15T19:50:19Z","pushed_at":"2022-02-03T09:25:39Z","stargazers_count":284,"language":"Python"},{"full_name":"outcastofmusic/quick-nlp","description":"Pytorch NLP library based on FastAI ","topics":["pytorch","fastai","nlp-library","seq2seq"],"created_at":"2018-03-24T10:03:50Z","pushed_at":"2018-07-04T08:13:28Z","stargazers_count":283,"language":"Jupyter Notebook"},{"full_name":"tugstugi/pytorch-saltnet","description":"Kaggle | 9th place single model solution for TGS Salt Identification Challenge","topics":["deep-learning","cnn","pytorch","segmentation","convolutional-neural-networks","unet","unet-image-segmentation","unet-pytorch","seismic-imaging","kaggle-competition"],"created_at":"2018-10-20T00:13:24Z","pushed_at":"2018-10-29T12:36:02Z","stargazers_count":278,"language":"Python"},{"full_name":"MillionIntegrals/vel","description":"Velocity in deep-learning research","topics":["pytorch","deep-learning","reinforcement-learning","convolutional-neural-networks","python"],"created_at":"2018-05-09T20:16:48Z","pushed_at":"2022-12-08T04:50:05Z","stargazers_count":275,"language":"Python"},{"full_name":"jingweiz/pytorch-dnc","description":"Neural Turing Machine (NTM) & Differentiable Neural Computer (DNC) with pytorch & visdom","topics":["ntm","dnc","pytorch","visdom","external-memory","deep-learning"],"created_at":"2017-05-10T21:01:44Z","pushed_at":"2018-02-20T10:38:57Z","stargazers_count":275,"language":"Python"},{"full_name":"szagoruyko/pyinn","description":"CuPy fused PyTorch neural networks ops","topics":["cupy","pytorch"],"created_at":"2017-05-11T14:32:40Z","pushed_at":"2018-02-15T10:59:28Z","stargazers_count":272,"language":"Python"},{"full_name":"dyhan0920/PyramidNet-PyTorch","description":"A PyTorch implementation for PyramidNets (Deep Pyramidal Residual Networks, https://arxiv.org/abs/1610.02915)","topics":["pyramidnet","resnet","cifar-10","cifar-100","pytorch","imagenet","residual-networks"],"created_at":"2017-10-31T09:03:35Z","pushed_at":"2020-07-05T16:30:18Z","stargazers_count":270,"language":"Python"},{"full_name":"awslabs/Renate","description":"Library for automatic retraining and continual learning","topics":["aws","continual-learning","machine-learning","machine-learning-algorithms","neural","neural-network","pytorch","pytorch-lightning","sagemaker","hyperparameter-tuning"],"created_at":"2022-10-26T08:10:25Z","pushed_at":"2023-12-18T22:25:50Z","stargazers_count":263,"language":"Shell"},{"full_name":"asappresearch/flambe","description":"An ML framework to accelerate research and its path to production.","topics":["machine-learning","research","pytorch","python","deep-learning","distributed","ml"],"created_at":"2019-07-29T20:57:45Z","pushed_at":"2020-07-15T18:15:25Z","stargazers_count":260,"language":"Shell"},{"full_name":"chingyaoc/pytorch-REINFORCE","description":"PyTorch Implementation of REINFORCE for both discrete & continuous control","topics":["reinforcement-learning","reinforce","continuous-control","mujoco","pytorch","gym"],"created_at":"2017-04-16T04:13:08Z","pushed_at":"2017-04-16T16:28:38Z","stargazers_count":257,"language":"Python"},{"full_name":"ahmedbesbes/character-based-cnn","description":"Implementation of character based convolutional neural network","topics":["convolutional-neural-network","natural-language-processing","pytorch","deep-neural-networks","character-cnn","nlp-machine-learning","nlp","paper-implementations","character-based-model","youtube-video"],"created_at":"2019-01-15T13:36:34Z","pushed_at":"2021-04-28T18:01:10Z","stargazers_count":253,"language":"Python"},{"full_name":"gitabcworld/FewShotLearning","description":"Pytorch implementation of the paper \"Optimization as a Model for Few-Shot Learning\"","topics":["optimization","few-shot","python","pytorch","optimization-algorithms"],"created_at":"2017-08-10T09:42:09Z","pushed_at":"2017-09-22T08:26:21Z","stargazers_count":250,"language":"Python"},{"full_name":"inferno-pytorch/inferno","description":"A utility library around PyTorch","topics":["deep-learning","pytorch","neural-networks"],"created_at":"2017-06-07T19:19:48Z","pushed_at":"2022-12-26T20:28:08Z","stargazers_count":245,"language":"Python"},{"full_name":"dougsouza/pytorch-sync-batchnorm-example","description":"How to use Cross Replica / Synchronized Batchnorm in Pytorch","topics":["pytorch","batchnorm","distributed-training","dataparallel"],"created_at":"2019-04-23T00:56:51Z","pushed_at":"2019-05-13T15:19:30Z","stargazers_count":245,"language":"unknown"},{"full_name":"L0SG/relational-rnn-pytorch","description":"An implementation of DeepMind's Relational Recurrent Neural Networks (NeurIPS 2018) in PyTorch.","topics":["pytorch","language-model","word-language-model","language-modeling","deep-learning","recurrent-neural-networks","deepmind","transformer","self-attention"],"created_at":"2018-08-21T07:57:41Z","pushed_at":"2018-12-27T05:38:23Z","stargazers_count":243,"language":"Python"},{"full_name":"leviswind/pytorch-transformer","description":"pytorch implementation of Attention is all you need","topics":["pytorch","attention-is-all-you-need","translation","transformer"],"created_at":"2018-01-05T08:00:01Z","pushed_at":"2021-06-16T06:35:54Z","stargazers_count":235,"language":"Python"},{"full_name":"devendrachaplot/DeepRL-Grounding","description":"Train an RL agent to execute natural language instructions in a 3D Environment (PyTorch)","topics":["pytorch","reinforcement-learning","language-grounding","gated-attention","pytorch-rl","a3c-lstm"],"created_at":"2017-11-21T21:06:33Z","pushed_at":"2018-04-16T12:21:20Z","stargazers_count":235,"language":"Python"},{"full_name":"Wizaron/pytorch-cpp-inference","description":"Serving PyTorch 1.0 Models as a Web Server in C++","topics":["pytorch","inference","cpp"],"created_at":"2018-10-23T19:32:53Z","pushed_at":"2020-01-15T13:39:21Z","stargazers_count":224,"language":"Dockerfile"},{"full_name":"ZhouYanzhao/ORN","description":"Oriented Response Networks, in CVPR 2017","topics":["torch","pytorch","caffe","cvpr","rotation-invariant-features"],"created_at":"2017-01-08T01:44:54Z","pushed_at":"2022-07-17T04:13:17Z","stargazers_count":223,"language":"Jupyter Notebook"},{"full_name":"nearai/torchfold","description":"Tools for PyTorch","topics":["machine-learning","deep-learning","deep-neural-networks","pytorch"],"created_at":"2017-08-22T22:28:18Z","pushed_at":"2022-08-10T20:26:14Z","stargazers_count":222,"language":"Python"},{"full_name":"delira-dev/delira","description":"Lightweight framework for fast prototyping and training deep neural networks with PyTorch and TensorFlow","topics":["deep-learning","radiology","medical-imaging","machine-learning","pytorch","tensorflow","delira","medical-images"],"created_at":"2018-12-11T15:19:01Z","pushed_at":"2020-11-13T17:34:48Z","stargazers_count":220,"language":"Python"},{"full_name":"eth-sri/diffai","description":"A certifiable defense against adversarial examples by training neural networks to be provably robust","topics":["neural-network","attack","robust","defense","abstract-interpretation","pytorch"],"created_at":"2018-07-08T16:59:42Z","pushed_at":"2021-01-13T08:49:14Z","stargazers_count":217,"language":"Python"},{"full_name":"SSARCandy/DeepCORAL","description":"üß† A PyTorch implementation of 'Deep CORAL: Correlation Alignment for Deep Domain Adaptation.', ECCV 2016","topics":["python3","pytorch","deep-learning","machine-learning"],"created_at":"2017-10-31T18:15:01Z","pushed_at":"2021-04-22T14:26:32Z","stargazers_count":211,"language":"Python"},{"full_name":"ajbrock/FreezeOut","description":"Accelerate Neural Net Training by Progressively Freezing Layers","topics":["neural-networks","deep-learning","machine-learning","pytorch","densenet","memes","wide-residual-networks","vgg16"],"created_at":"2017-06-15T15:19:12Z","pushed_at":"2018-08-15T01:50:36Z","stargazers_count":207,"language":"Python"},{"full_name":"zalandoresearch/pytorch-dilated-rnn","description":"Dilated RNNs in pytorch","topics":["pytorch","rnns","deep-learning","machine-learning"],"created_at":"2018-01-18T08:47:14Z","pushed_at":"2019-06-24T08:30:25Z","stargazers_count":207,"language":"Python"},{"full_name":"soobinseo/Tacotron-pytorch","description":"Pytorch implementation of Tacotron","topics":["tacotron","text-to-speech","tts","pytorch"],"created_at":"2017-11-23T07:03:44Z","pushed_at":"2018-11-01T14:58:32Z","stargazers_count":206,"language":"Python"},{"full_name":"shahsohil/DCC","description":"This repository contains the source code and data for reproducing results of Deep Continuous Clustering paper","topics":["dcc","pytorch","clustering","embedding","robust-optimization","robust-continuous-clustering","rcc","autoencoder-clustering"],"created_at":"2018-03-01T17:29:11Z","pushed_at":"2021-07-14T09:52:55Z","stargazers_count":206,"language":"Python"},{"full_name":"BasBuller/PySNN","description":"Efficient Spiking Neural Network framework, built on top of PyTorch for GPU acceleration","topics":["pytorch","spiking-neural-networks","gpu-computing","deep-learning","machine-learning","stdp","dynamic","neural-networks","gpu-acceleration","python3"],"created_at":"2019-07-30T06:13:17Z","pushed_at":"2021-01-10T22:43:17Z","stargazers_count":205,"language":"Python"},{"full_name":"benedekrozemberczki/SEAL-CI","description":"A PyTorch implementation of  \"Semi-Supervised Graph Classification: A Hierarchical Graph Perspective\" (WWW 2019)","topics":["gcn","graph-convolutional-networks","active-learning","active-learning-module","deep-learning","pytorch","tensorflow","graph-classification","node-classification","deep-learning-algorithms"],"created_at":"2019-04-23T15:01:21Z","pushed_at":"2022-11-06T21:14:17Z","stargazers_count":205,"language":"Python"},{"full_name":"dmarnerides/pydlt","description":"PyTorch based Deep Learning Toolbox","topics":["pytorch","deep-learning","computer-vision","toolbox"],"created_at":"2018-01-28T01:16:03Z","pushed_at":"2018-07-27T11:39:46Z","stargazers_count":204,"language":"Batchfile"},{"full_name":"benedekrozemberczki/Splitter","description":"A Pytorch implementation of \"Splitter: Learning Node Representations that Capture Multiple Social Contexts\" (WWW 2019).","topics":["deepwalk","pytorch","node2vec","gensim","ego-splitting","machine-learning","word2vec","factorization","implicit-factorization","deep-learning"],"created_at":"2019-03-17T16:08:17Z","pushed_at":"2023-06-06T22:50:48Z","stargazers_count":204,"language":"Python"},{"full_name":"atiyo/deep_image_prior","description":"Image reconstruction done with untrained neural networks.","topics":["deep-learning","autoencoder","convolutional-neural-networks","pytorch"],"created_at":"2018-01-06T20:54:50Z","pushed_at":"2020-02-11T21:10:26Z","stargazers_count":202,"language":"Python"},{"full_name":"AaltoVision/DGC-Net","description":"A PyTorch implementation of \"DGC-Net: Dense Geometric Correspondence Network\"","topics":["pytorch","cnn","computer-vision","python","image-matching","deep-learning"],"created_at":"2018-11-09T10:47:14Z","pushed_at":"2021-10-12T22:55:47Z","stargazers_count":202,"language":"Python"},{"full_name":"jacobgil/pytorch-zssr","description":"PyTorch implementation of 1712.06087  \"Zero-Shot\" Super-Resolution using Deep Internal Learning","topics":["pytorch","deep-learning","super-resolution","computer-vision"],"created_at":"2018-01-04T17:08:44Z","pushed_at":"2018-01-10T10:16:29Z","stargazers_count":198,"language":"Python"},{"full_name":"potterhsu/SVHNClassifier-PyTorch","description":"A PyTorch implementation of Multi-digit Number Recognition from Street View Imagery using Deep Convolutional Neural Networks (http://arxiv.org/pdf/1312.6082.pdf)","topics":["deep-learning","pytorch","svhn"],"created_at":"2017-04-02T18:12:17Z","pushed_at":"2021-04-26T08:26:20Z","stargazers_count":194,"language":"Python"},{"full_name":"napsternxg/pytorch-practice","description":"Some example scripts on pytorch","topics":["pytorch","pytorch-tutorial","deep-learning","machine-learning"],"created_at":"2017-01-23T17:07:33Z","pushed_at":"2021-10-28T22:20:24Z","stargazers_count":192,"language":"Jupyter Notebook"},{"full_name":"cmsflash/beauty-net","description":"A simple, flexible, and extensible template for PyTorch. It's beautiful.","topics":["deep-learning","computer-vision","cnn","pytorch","image-classification","pytorch-template"],"created_at":"2018-06-28T06:33:17Z","pushed_at":"2023-11-07T10:46:26Z","stargazers_count":186,"language":"Python"},{"full_name":"locuslab/e2e-model-learning","description":"Task-based end-to-end model learning in stochastic optimization","topics":["machine-learning","deep-learning","optimization","stochastic-optimizers","pytorch","paper"],"created_at":"2017-03-13T21:28:48Z","pushed_at":"2020-11-29T02:51:58Z","stargazers_count":186,"language":"Python"},{"full_name":"blue-season/pywarm","description":"A cleaner way to build neural networks for PyTorch.","topics":["pytorch","deep-learning","keras","machine-learning","clean-code","python3","neural-network","data-science","neural-networks"],"created_at":"2019-08-29T06:01:35Z","pushed_at":"2019-09-23T16:43:17Z","stargazers_count":185,"language":"Python"},{"full_name":"mblondel/fenchel-young-losses","description":"Probabilistic classification in PyTorch/TensorFlow/scikit-learn with Fenchel-Young losses","topics":["loss-functions","probabilistic-classification","pytorch","tensorflow","sklearn"],"created_at":"2018-10-17T13:28:51Z","pushed_at":"2023-09-19T22:09:22Z","stargazers_count":182,"language":"Python"},{"full_name":"fanglanting/skip-gram-pytorch","description":"A complete pytorch implementation of skip-gram","topics":["embed","word2vec","pytorch","spearman"],"created_at":"2017-10-23T04:06:54Z","pushed_at":"2017-10-23T05:55:10Z","stargazers_count":181,"language":"Python"},{"full_name":"thnkim/OpenFacePytorch","description":"PyTorch module to use OpenFace's nn4.small2.v1.t7 model","topics":["openface","pytorch"],"created_at":"2017-05-13T17:50:33Z","pushed_at":"2020-02-20T16:32:38Z","stargazers_count":180,"language":"Python"},{"full_name":"jolibrain/joliGEN","description":"Generative AI Image Toolset with GANs and Diffusion for Real-World Applications","topics":["pytorch","deep-learning","gan","generative-model","augmented-reality","diffusion-models","image-generation","image-to-image"],"created_at":"2020-08-18T09:26:25Z","pushed_at":"2024-01-12T09:55:29Z","stargazers_count":177,"language":"Python"},{"full_name":"s3nh/text-detector","description":"Tool which allow you to detect and translate text.","topics":["craft","crnn","text","text-processing","pytorch","ocr-recognition","deep-learning","nlp","recognition","text-recognition"],"created_at":"2019-06-26T18:36:53Z","pushed_at":"2019-09-10T12:42:36Z","stargazers_count":176,"language":"Python"},{"full_name":"Ben-Louis/Deep-Image-Analogy-PyTorch","description":"A python implementation of Deep-Image-Analogy based on pytorch.","topics":["pytorch","style-transfer"],"created_at":"2018-03-01T01:56:43Z","pushed_at":"2021-12-11T08:31:53Z","stargazers_count":175,"language":"Python"},{"full_name":"TianhongDai/integrated-gradient-pytorch","description":"This is the pytorch implementation of the paper - Axiomatic Attribution for Deep Networks.","topics":["visualization","pytorch","integrated-gradient"],"created_at":"2018-10-09T21:06:47Z","pushed_at":"2022-03-25T13:02:21Z","stargazers_count":172,"language":"Python"},{"full_name":"Js-Mim/mss_pytorch","description":"Singing Voice Separation via Recurrent Inference and Skip-Filtering Connections - PyTorch Implementation.  Demo:","topics":["music-source-separation","deep-learning","recurrent-neural-networks","skip-filtering-connections","pytorch","mss-pytorch"],"created_at":"2017-08-29T08:16:39Z","pushed_at":"2018-11-02T10:20:17Z","stargazers_count":170,"language":"Python"},{"full_name":"ahirner/pytorch-retraining","description":"Transfer Learning Shootout for PyTorch's model zoo (torchvision)","topics":["transfer-learning","pytorch","benchmark"],"created_at":"2017-05-29T17:09:42Z","pushed_at":"2020-09-20T11:06:49Z","stargazers_count":170,"language":"Jupyter Notebook"},{"full_name":"markdtw/vqa-winner-cvprw-2017","description":"Pytorch implementation of winner from VQA Chllange Workshop in CVPR'17","topics":["pytorch","visual-question-answering"],"created_at":"2017-09-08T14:55:00Z","pushed_at":"2019-02-08T00:04:45Z","stargazers_count":165,"language":"Python"},{"full_name":"MrGemy95/visual-interaction-networks-pytorch","description":"This's an implementation of deepmind Visual Interaction Networks paper using pytorch","topics":["deep-learning","machine-learning","video-prediction-models","physics","pytorch","nerual-network","deepmind","convolutional-neural-networks","computer-vision","visual-interaction-networks"],"created_at":"2017-10-13T10:50:15Z","pushed_at":"2018-02-02T15:53:29Z","stargazers_count":165,"language":"Python"},{"full_name":"ducha-aiki/pytorch-sift","description":"PyTorch implementation of SIFT descriptor","topics":["pytorch","descriptor","local-features","sift","cnn","image-matching"],"created_at":"2017-04-30T18:29:05Z","pushed_at":"2019-08-22T10:44:48Z","stargazers_count":165,"language":"Jupyter Notebook"},{"full_name":"davexpro/pytorch-pose-estimation","description":"PyTorch Implementation of Realtime Multi-Person Pose Estimation project.","topics":["pytorch","python3","human-pose-estimation","computer-vision","deep-learning","cvpr-2017"],"created_at":"2017-12-26T04:34:46Z","pushed_at":"2017-12-26T06:44:44Z","stargazers_count":159,"language":"Jupyter Notebook"},{"full_name":"pkmr06/pytorch-smoothgrad","description":"SmoothGrad implementation in PyTorch ","topics":["pytorch","deep-learning","saliency-map"],"created_at":"2017-07-28T15:21:14Z","pushed_at":"2021-04-04T14:03:00Z","stargazers_count":158,"language":"Python"},{"full_name":"furkanu/deeplearning.ai-pytorch","description":"PyTorch Implementations of Coursera's Deep Learning(deeplearning.ai) Specialization","topics":["deep-learning","pytorch","coursera-specialization","coursera-deep-learning"],"created_at":"2018-08-29T12:42:39Z","pushed_at":"2020-12-15T21:33:36Z","stargazers_count":143,"language":"Jupyter Notebook"},{"full_name":"geyang/deep-auto-punctuation","description":"a pytorch implementation of auto-punctuation learned character by character","topics":["deep-learning","auto-punctuation","pytorch","engadget","reading-engadget-articles","learning-punctuations"],"created_at":"2017-03-27T21:58:09Z","pushed_at":"2020-11-15T13:52:42Z","stargazers_count":142,"language":"Jupyter Notebook"},{"full_name":"ProGamerGov/neural-dream","description":"PyTorch implementation of DeepDream algorithm","topics":["deepdream","pytorch","visualization","computer-vision","resnet","googlenet","inception","vgg","nin","pytorch-deepdream"],"created_at":"2020-03-16T17:59:45Z","pushed_at":"2021-09-29T14:17:35Z","stargazers_count":130,"language":"Python"},{"full_name":"akolishchak/doom-net-pytorch","description":"Reinforcement learning models in ViZDoom environment","topics":["pytorch","vizdoom","reinforcement-learning","doom","agent","reinforcement","learning","ppo","mcts","doomnet-track1"],"created_at":"2017-01-30T00:24:10Z","pushed_at":"2022-03-09T18:44:30Z","stargazers_count":128,"language":"Python"},{"full_name":"oval-group/mlogger","description":"a lightweight and simple logger for Machine Learning","topics":["logging","python","visdom","experiments","deep-learning","machine-learning","optimization","visualization","pytorch","tensorboard"],"created_at":"2017-03-02T16:19:08Z","pushed_at":"2020-11-09T22:31:16Z","stargazers_count":127,"language":"Python"},{"full_name":"kefirski/pytorch_NEG_loss","description":"NEG loss implemented in pytorch","topics":["pytorch","word2vec","python"],"created_at":"2017-03-04T07:32:11Z","pushed_at":"2017-07-07T08:49:15Z","stargazers_count":125,"language":"Python"},{"full_name":"szagoruyko/binary-wide-resnet","description":"PyTorch implementation of Wide Residual Networks with 1-bit weights by McDonnell (ICLR 2018)","topics":["pytorch","wide-residual-networks"],"created_at":"2018-08-26T16:03:17Z","pushed_at":"2018-09-06T12:59:12Z","stargazers_count":124,"language":"Python"},{"full_name":"gram-ai/radio-transformer-networks","description":"A PyTorch implementation of Radio Transformer Networks from the paper \"An Introduction to Deep Learning for the Physical Layer\".","topics":["radio-transformer-networks","signal-processing","pytorch","machine-learning"],"created_at":"2017-11-05T10:19:28Z","pushed_at":"2017-11-05T10:32:22Z","stargazers_count":123,"language":"Python"},{"full_name":"rdspring1/PyTorch_GBW_LM","description":"PyTorch Language Model for 1-Billion Word (LM1B / GBW) Dataset","topics":["pytorch","language-model","lstm","deep-learning","gpu","machine-learning","nlp","torch","torch-gbw"],"created_at":"2017-11-15T14:54:57Z","pushed_at":"2019-08-22T22:08:16Z","stargazers_count":121,"language":"Python"},{"full_name":"sniklaus/pytorch-extension","description":"an example of a CUDA extension for PyTorch using CuPy which computes the Hadamard product of two tensors","topics":["pytorch","python","cuda","deep-learning","cupy"],"created_at":"2017-07-01T04:49:16Z","pushed_at":"2022-11-07T16:59:26Z","stargazers_count":119,"language":"Python"},{"full_name":"neptune-ai/open-solution-salt-identification","description":"Open solution to the TGS Salt Identification Challenge","topics":["deep-learning","machine-learning","data-science","python","python3","image-processing","image-segmentation","pytorch","pipeline","pipeline-framework"],"created_at":"2018-07-24T09:29:48Z","pushed_at":"2021-03-22T06:23:08Z","stargazers_count":119,"language":"Python"},{"full_name":"andrewliao11/dni.pytorch","description":"Implement Decoupled Neural Interfaces using Synthetic Gradients in Pytorch","topics":["synthetic-gradients","mnist","pytorch","classification"],"created_at":"2017-05-07T02:24:36Z","pushed_at":"2017-10-19T05:03:17Z","stargazers_count":117,"language":"Python"},{"full_name":"bharathgs/NALU","description":"Basic pytorch implementation of NAC/NALU from Neural Arithmetic Logic Units paper by trask et.al","topics":["pytorch","nalu","alu","deep-learning","neural-network","deepmind","arithmetic","logic","accumulator","machine-learning"],"created_at":"2018-08-04T14:00:49Z","pushed_at":"2018-10-03T09:43:06Z","stargazers_count":114,"language":"Python"},{"full_name":"Vermeille/Torchelie","description":"Torch√©lie is a set of utility functions, layers, losses, models, trainers and other things for PyTorch.","topics":["pytorch","utils","perceptual","loss","gan","vqvae","torch"],"created_at":"2019-07-13T21:14:50Z","pushed_at":"2023-10-04T10:15:35Z","stargazers_count":111,"language":"Python"},{"full_name":"alecwangcq/EigenDamage-Pytorch","description":"Code for \"EigenDamage: Structured Pruning in the Kronecker-Factored Eigenbasis\" https://arxiv.org/abs/1905.05934","topics":["network-pruning","deep-learning","machine-learning","fisher-matrix","pytorch"],"created_at":"2019-05-11T18:18:02Z","pushed_at":"2020-03-03T00:06:55Z","stargazers_count":111,"language":"Python"},{"full_name":"enochkan/torch-metrics","description":"Metrics for model evaluation in pytorch","topics":["pytorch","machine-learning","deep-learning","metrics","pytorch-implementation","pytorch-cnn","computer-vision","torch-metrics"],"created_at":"2020-11-03T19:08:46Z","pushed_at":"2021-03-22T18:02:50Z","stargazers_count":109,"language":"Python"},{"full_name":"stepelu/ptstat","description":"Probabilistic Programming and Statistical Inference in PyTorch","topics":["pytorch","probability","statistics"],"created_at":"2017-06-23T04:46:27Z","pushed_at":"2017-07-04T05:32:39Z","stargazers_count":109,"language":"Python"},{"full_name":"pytorch/extension-script","description":"Example repository for custom C++/CUDA operators for TorchScript","topics":["pytorch","cpp","cuda"],"created_at":"2018-11-28T20:54:55Z","pushed_at":"2022-08-28T02:26:07Z","stargazers_count":107,"language":"Dockerfile"},{"full_name":"SherylHYX/pytorch_geometric_signed_directed","description":"PyTorch Geometric Signed Directed is a signed/directed graph neural network extension library for PyTorch Geometric. The paper is accepted by LoG 2023.","topics":["gnn","graph-neural-netowrks","signed-networks","directed-networks","pytorch-geometric","pytorch","python","machine-learning","deep-learning","networks"],"created_at":"2021-10-28T04:26:49Z","pushed_at":"2023-11-20T18:07:08Z","stargazers_count":106,"language":"Python"},{"full_name":"kdexd/lang-emerge-parlai","description":"Implementation of EMNLP 2017 Paper \"Natural Language Does Not Emerge 'Naturally' in Multi-Agent Dialog\" using PyTorch and ParlAI","topics":["pytorch","parlai","emnlp","language-grounding","reinforcement-learning"],"created_at":"2017-11-08T20:38:32Z","pushed_at":"2019-04-02T22:56:23Z","stargazers_count":105,"language":"Python"},{"full_name":"duc0/deep-dream-in-pytorch","description":"Pytorch implementation of the DeepDream computer vision algorithm","topics":["deep-learning","deep-neural-networks","pytorch","deep-dream","machine-learning","ai","caffe2","torch","deepdream"],"created_at":"2018-08-31T12:49:01Z","pushed_at":"2019-12-21T06:26:36Z","stargazers_count":103,"language":"Jupyter Notebook"},{"full_name":"floringogianu/categorical-dqn","description":"A working implementation of the Categorical DQN (Distributional RL).","topics":["pytorch","reinforcement-learning","dqn","atari"],"created_at":"2017-07-27T13:11:06Z","pushed_at":"2018-04-07T22:07:59Z","stargazers_count":96,"language":"Python"},{"full_name":"orobix/Visual-Feature-Attribution-Using-Wasserstein-GANs-Pytorch","description":"Implementation of Visual Feature Attribution using Wasserstein GANs (VAGANs, https://arxiv.org/abs/1711.08998) in PyTorch","topics":["python","pytorch","gan","cnn","anomaly-detection","vgan"],"created_at":"2018-01-10T11:33:40Z","pushed_at":"2023-05-31T13:24:37Z","stargazers_count":92,"language":"Python"},{"full_name":"svishnu88/DLwithPyTorch","description":"Code to accompany my upcoming  book \"Deep learning with PyTorch Book \" from Packt","topics":["pytorch","python","deep-learning","pytorch-cnn","pytorch-nlp"],"created_at":"2018-02-03T02:07:08Z","pushed_at":"2019-06-09T04:39:50Z","stargazers_count":89,"language":"Jupyter Notebook"},{"full_name":"amdegroot/pytorch-containers","description":"Torch Containers simplified in PyTorch","topics":["pytorch","complex-architectures","autograd","pytorch-containers","torch"],"created_at":"2017-01-29T00:18:39Z","pushed_at":"2017-04-28T23:31:53Z","stargazers_count":88,"language":"Lua"},{"full_name":"senya-ashukha/quantile-regression-dqn-pytorch","description":"A short and easy implementation of Quantile Regression DQN | Distributional Reinforcement Learning","topics":["reinforcement-learning","qr-dqn","quantile-regression-dqn","pytorch"],"created_at":"2018-08-24T08:49:03Z","pushed_at":"2020-09-03T02:03:21Z","stargazers_count":88,"language":"Python"},{"full_name":"cxhernandez/molencoder","description":"Molecular AutoEncoder in PyTorch","topics":["deep-learning","autoencoder","computational-chemistry","pytorch","python"],"created_at":"2017-05-20T03:14:59Z","pushed_at":"2020-05-13T19:23:25Z","stargazers_count":84,"language":"Python"},{"full_name":"kefirski/pytorch_TDNN","description":"Time Delayed NN implemented in pytorch","topics":["pytorch","tdnn","cnn","deep-learning","python"],"created_at":"2017-03-04T08:21:01Z","pushed_at":"2017-03-27T17:07:01Z","stargazers_count":82,"language":"Python"},{"full_name":"bengxy/FastNeuralStyle","description":"Fast Neural Style for Image Style Transform by Pytorch","topics":["neural-style","fast-neural-style","pytorch","deep-learning"],"created_at":"2017-02-17T04:56:59Z","pushed_at":"2022-01-24T04:39:40Z","stargazers_count":82,"language":"Python"},{"full_name":"erogol/FFTNet","description":"FFTNet vocoder implementation","topics":["text2speech","deep-learning","pytorch","vocoder","fftnet"],"created_at":"2018-06-25T13:25:40Z","pushed_at":"2018-09-28T17:33:52Z","stargazers_count":81,"language":"Python"},{"full_name":"kefirski/pytorch_Highway","description":"Highway network implemented in pytorch","topics":["pytorch","python","highway-network"],"created_at":"2017-03-04T07:17:03Z","pushed_at":"2017-03-27T17:03:17Z","stargazers_count":79,"language":"Python"},{"full_name":"subeeshvasu/2018_subeesh_epsr_eccvw","description":"Project page of the paper 'Analyzing Perception-Distortion Tradeoff using Enhanced Perceptual Super-resolution Network' (ECCVW 2018) ","topics":["pirm-sr","epsr","deep-learning","super-resolution","pytorch"],"created_at":"2018-09-14T10:09:52Z","pushed_at":"2020-07-14T08:12:06Z","stargazers_count":79,"language":"Python"},{"full_name":"cogitare-ai/cogitare","description":"üî• Cogitare - A Modern, Fast, and Modular Deep Learning and Machine Learning framework for Python ","topics":["pytorch","machine-learning","modular-deep-learning","deep-learning","framework","toolchain","toolbox"],"created_at":"2017-06-19T04:41:48Z","pushed_at":"2019-09-24T11:52:17Z","stargazers_count":77,"language":"Python"},{"full_name":"andrewliao11/pytorch-a3c-mujoco","description":"Implement A3C for Mujoco gym envs","topics":["pytorch","reinforcement-learning","a3c","mujoco","continuous-control","actor-critic"],"created_at":"2017-04-14T03:38:52Z","pushed_at":"2017-11-02T02:56:26Z","stargazers_count":73,"language":"Python"},{"full_name":"moskomule/shampoo.pytorch","description":"An implementation of shampoo","topics":["shampoo","pytorch"],"created_at":"2018-03-07T08:31:13Z","pushed_at":"2018-03-09T04:39:03Z","stargazers_count":72,"language":"Python"},{"full_name":"desimone/pytorch-cat-vs-dogs","description":"","topics":["pytorch","kaggle","machine-learning","example"],"created_at":"2017-01-25T17:18:33Z","pushed_at":"2017-01-25T17:24:16Z","stargazers_count":71,"language":"Python"},{"full_name":"alykhantejani/nninit","description":"Weight initialization schemes for PyTorch nn.Modules","topics":["weight-initialization-schemes","pytorch"],"created_at":"2017-02-16T22:15:31Z","pushed_at":"2017-03-02T08:48:32Z","stargazers_count":70,"language":"Python"},{"full_name":"benedekrozemberczki/SINE","description":"A PyTorch Implementation of \"SINE: Scalable Incomplete Network Embedding\" (ICDM 2018).","topics":["aane","asne","deepwalk","node2vec","machine-learning","deep-learning","network-embedding","graph-embedding","node-embedding","pytorch"],"created_at":"2019-01-07T13:59:56Z","pushed_at":"2023-03-18T12:12:44Z","stargazers_count":70,"language":"Python"},{"full_name":"moskomule/pytorch.rl.learning","description":"for learning reinforcement learning using PyTorch.","topics":["pytorch","reinforcement-learning"],"created_at":"2017-08-10T10:10:54Z","pushed_at":"2019-10-02T06:17:27Z","stargazers_count":65,"language":"Python"},{"full_name":"omarsar/mri-analysis-pytorch","description":"MRI analysis using PyTorch and MedicalTorch","topics":["pytorch","medicine","health","healthcare","deep-learning","neural-network","data-science"],"created_at":"2018-10-16T08:55:44Z","pushed_at":"2018-10-16T09:08:15Z","stargazers_count":64,"language":"Jupyter Notebook"},{"full_name":"ramon-oliveira/aorun","description":"Deep Learning over PyTorch","topics":["pytorch","deeplearning","neural-networks","bayesian-inference"],"created_at":"2017-03-10T19:24:27Z","pushed_at":"2017-09-06T06:22:17Z","stargazers_count":61,"language":"Python"},{"full_name":"ProGamerGov/dream-creator","description":"Quickly and easily create / train a custom DeepDream model","topics":["deepdream","pytorch","visualization","computer-vision","googlenet","inception","pytorch-deepdream","deep-dream","dream-creator","deepdream-model"],"created_at":"2020-08-17T20:14:12Z","pushed_at":"2022-08-05T15:26:02Z","stargazers_count":60,"language":"Python"},{"full_name":"gugarosa/learnergy","description":"üí° Learnergy is a Python library for energy-based machine learning models.","topics":["python","pytorch","machine-learning","energy","rbm","dbn"],"created_at":"2019-05-28T12:14:39Z","pushed_at":"2023-10-14T15:52:34Z","stargazers_count":60,"language":"Python"},{"full_name":"minerva-ml/open-solution-ship-detection","description":"Open solution to the Airbus Ship Detection Challenge","topics":["data-science","machine-learning","deep-learning","deep-neural-networks","unet","unet-image-segmentation","python","python3","pytorch","pytorch-implmention"],"created_at":"2018-08-08T19:15:41Z","pushed_at":"2022-06-22T06:40:14Z","stargazers_count":58,"language":"Python"},{"full_name":"c0nn3r/pytorch_highway_networks","description":"Highway networks implemented in PyTorch.","topics":["pytorch","deep-learning","neural-networks","highway-network"],"created_at":"2017-02-02T21:17:25Z","pushed_at":"2017-04-05T15:23:09Z","stargazers_count":56,"language":"Python"},{"full_name":"benedekrozemberczki/PDN","description":"The official PyTorch implementation of \"Pathfinder Discovery Networks for Neural Message Passing\" (WebConf '21)","topics":["gcn","gnn","deepwalk","multiplex","graph2vec","pytorch","graph-neural-network","deep-learning","pathfinder","message-passing"],"created_at":"2021-02-05T18:37:48Z","pushed_at":"2023-01-22T17:26:16Z","stargazers_count":56,"language":"Python"},{"full_name":"matifali/dockerdl","description":"Deep Learning Docker Image","topics":["cuda","deep-learning","docker","jupyter","numpy","python","pytorch","tensorflow"],"created_at":"2022-09-13T21:16:27Z","pushed_at":"2023-12-03T15:34:34Z","stargazers_count":56,"language":"Dockerfile"},{"full_name":"synsense/sinabs","description":"A deep learning library for spiking neural networks which is based on PyTorch, focuses on fast training and supports inference on neuromorphic hardware.","topics":["spiking-neural-networks","machine-learning","pytorch","snn"],"created_at":"2022-02-21T07:49:01Z","pushed_at":"2024-01-12T09:08:41Z","stargazers_count":55,"language":"Python"},{"full_name":"loudinthecloud/dpwa","description":"Distributed Learning by Pair-Wise Averaging","topics":["deep-learning","distributed-systems","asynchronous-learning","sgd","pytorch","gossiping","python","neural-networks"],"created_at":"2017-10-29T09:18:18Z","pushed_at":"2017-10-31T11:19:07Z","stargazers_count":53,"language":"Python"},{"full_name":"oke-aditya/quickvision","description":"An Easy To Use PyTorch Computer Vision Library","topics":["computer-vision","deep-learning","pytorch","pytorch-lightning"],"created_at":"2020-11-06T14:13:47Z","pushed_at":"2023-07-06T22:21:28Z","stargazers_count":51,"language":"Dockerfile"},{"full_name":"jolibrain/fluidnet_cxx","description":"FluidNet re-written with ATen tensor lib","topics":["deep-learning","fluid-dynamics","pytorch","aten"],"created_at":"2018-04-13T14:42:13Z","pushed_at":"2019-06-17T08:36:44Z","stargazers_count":50,"language":"CMake"},{"full_name":"jinglescode/python-signal-processing","description":"splearn: package for signal processing and machine learning with Python. Contains tutorials on understanding and applying signal processing.","topics":["signal-processing","python","pytorch","numpy","scipy","python-tutorial","pytorch-tutorial","sequence","machine-learning"],"created_at":"2020-11-30T02:00:51Z","pushed_at":"2022-09-16T09:05:55Z","stargazers_count":44,"language":"Python"},{"full_name":"demelin/Noise-Contrastive-Estimation-NCE-for-pyTorch","description":"Re-implementation of the Noise Contrastive Estimation algorithm for pyTorch, following \"Noise-contrastive estimation: A new estimation principle for unnormalized statistical models.\" (Gutmann and Hyvarinen, AISTATS 2010)","topics":["nce","noise-contrastive-estimation","pytorch","algorithm"],"created_at":"2017-05-18T17:49:26Z","pushed_at":"2019-08-13T23:21:07Z","stargazers_count":44,"language":"Python"},{"full_name":"Erotemic/netharn","description":"Parameterized fit and prediction harnesses for pytorch ","topics":["pytorch","python","deep-learning"],"created_at":"2018-03-31T06:49:03Z","pushed_at":"2020-10-23T12:47:46Z","stargazers_count":39,"language":"Python"},{"full_name":"synsense/rockpool","description":"A machine learning library for spiking neural networks. Supports training with both torch and jax pipelines, and deployment to neuromorphic hardware.","topics":["deployment","jax","machine-learning","neuromorphic","pytorch","snn"],"created_at":"2021-09-09T15:44:24Z","pushed_at":"2023-10-27T08:42:43Z","stargazers_count":37,"language":"Shell"},{"full_name":"moskomule/eve.pytorch","description":"","topics":["eve","pytorch"],"created_at":"2017-02-26T02:44:29Z","pushed_at":"2021-11-01T19:27:52Z","stargazers_count":33,"language":"Python"},{"full_name":"iamaziz/PyTorch-docset","description":"PyTorch docset! use with Dash, Zeal, Velocity, or LovelyDocs.","topics":["pytorch","docset","pytorch-tutorial"],"created_at":"2017-03-28T06:14:53Z","pushed_at":"2017-08-15T14:04:42Z","stargazers_count":30,"language":"Python"},{"full_name":"rlan/notebooks","description":"A docker-based starter kit for machine learning via jupyter notebooks. Designed for those who just want a runtime environment and get on with machine learning. Docker tags:","topics":["jupyter-notebook","tensorflow","machine-learning","data-science","starter-kit","gpu-computing","tensorlayer","pytorch","gpu-ready","notebook"],"created_at":"2018-04-06T00:33:00Z","pushed_at":"2023-12-05T03:29:44Z","stargazers_count":30,"language":"Jupyter Notebook"},{"full_name":"rachtsingh/lgamma","description":"Implementations of polygamma, lgamma, and beta functions for PyTorch","topics":["pytorch","cuda","variational-inference"],"created_at":"2017-05-23T11:19:48Z","pushed_at":"2017-07-08T18:28:35Z","stargazers_count":24,"language":"Python"},{"full_name":"SherylHYX/SSSNET_Signed_Clustering","description":"Official code for the SDM2022 paper -- SSSNET: Semi-Supervised Signed Network Clustering.","topics":["clustering","gnns","pytorch","signed-networks","signed-network-embedding","deep-learning","social-network-analysis","graph-algorithms","graph-neural-networks"],"created_at":"2021-10-13T01:47:48Z","pushed_at":"2022-11-27T21:48:01Z","stargazers_count":17,"language":"Shell"}],"frecuent_topics":{"pytorch":388,"deep-learning":201,"machine-learning":103,"python":71,"computer-vision":36}}