{"category_type":"topic","category_name":"parallel-computing","repos_data":[{"full_name":"taskflow/taskflow","description":"A General-purpose Parallel and Heterogeneous Task Programming System","topics":["parallel-programming","threadpool","concurrent-programming","high-performance-computing","multicore-programming","multi-threading","taskparallelism","multithreading","parallel-computing","work-stealing"],"created_at":"2018-04-18T13:45:30Z","pushed_at":"2024-01-13T04:24:21Z","stargazers_count":9201,"language":"C++"},{"full_name":"kokkos/kokkos","description":"Kokkos C++ Performance Portability Programming Ecosystem: The Programming Model - Parallel Execution and Memory Abstraction","topics":["programming-model","parallel-computing","c-plus-plus","abstraction","high-performance-computing","snl-prog-models-runtimes","kokkos"],"created_at":"2015-04-08T21:55:55Z","pushed_at":"2024-01-13T02:05:26Z","stargazers_count":1631,"language":"CMake"},{"full_name":"ChunelFeng/CGraph","description":"【A simple C++ DAG framework】 一个简单好用的、无三方依赖的、跨平台的、收录于awesome-cpp的、基于流图的并行计算框架。欢迎star & fork","topics":["dag","threadpool","parallel-processing","workflow","taskflow","pipeline","framework","cpp","graph","parallel-computing"],"created_at":"2021-04-26T12:06:33Z","pushed_at":"2024-01-13T10:17:39Z","stargazers_count":1259,"language":"CMake"},{"full_name":"KratosMultiphysics/Kratos","description":"Kratos Multiphysics (A.K.A Kratos) is a framework for building parallel multi-disciplinary simulation software. Modularity, extensibility and HPC are the main objectives. Kratos has BSD license and is written in C++ with extensive Python interface.","topics":["kratos","fem","dem","parallel-computing","openmp","numerical-methods","c-plus-plus","python","multi-platform","bsd-license"],"created_at":"2017-02-13T10:58:24Z","pushed_at":"2024-01-13T12:48:28Z","stargazers_count":922,"language":"CMake"},{"full_name":"masa16/pwrake","description":"Parallel Workflow extension for Rake, runs on multicores, clusters, clouds.","topics":["ruby","rake","pwrake","parallel","workflow","scientific-computing","distributed-computing","gfarm","parallel-computing","cluster"],"created_at":"2012-04-13T11:00:54Z","pushed_at":"2020-01-16T07:12:37Z","stargazers_count":57,"language":"Ruby"},{"full_name":"tejzpr/ordered-concurrently","description":"Ordered-concurrently a library for concurrent processing with ordered output in Go. Process work concurrently and returns output in a channel in the order of input. It is useful in concurrently processing items in a queue, and get output in the order provided by the queue.","topics":["concurrent","golang","golang-library","data-science","data-pipeline","parallel-computing","concurrent-data-structure","ordered","parallel"],"created_at":"2021-02-28T17:56:05Z","pushed_at":"2023-04-24T23:24:20Z","stargazers_count":28,"language":"Go"}],"frecuent_topics":{"parallel-computing":6,"threadpool":2,"high-performance-computing":2,"c-plus-plus":2,"workflow":2}}